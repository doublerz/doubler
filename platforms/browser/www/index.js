/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict'\n\nconst TractorBeam = __webpack_require__(1)\nconst SimpleWebRTC = __webpack_require__(2)\n\ndocument.addEventListener('deviceready', function () {\n  const tractorBeam = new TractorBeam()\n\n  const webrtc = new SimpleWebRTC({\n    remoteVideosEl: 'remotesVideos',\n    socketio: { transports: ['websocket'] },\n    debug: true\n  })\n\n  webrtc.connection.on('connect_error', function (error) {\n    console.log(error)\n  })\n\n  webrtc.on('readyToCall', function () {\n    webrtc.joinRoom('tractor-beam')\n\n    webrtc.on('createdPeer', function (peer) {\n      peer.on('channelMessage', function (peer, label, message) {\n        if (message.type === 'speeds') tractorBeam.setSpeeds(message.payload)\n      })\n    })\n  })\n\n  webrtc.startLocalVideo()\n  tractorBeam.connect()\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/index.js?");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("'use strict'\n\n// Tractor Beam / Zumo\nconst DIR_R = 7\nconst DIR_L = 8\nconst PWM_R = 9\nconst PWM_L = 10\n\nfunction success (message) {\n  console.log(message)\n}\n\nfunction error (message) {\n  console.error(message)\n}\n\nmodule.exports = class TractorBeam {\n  connect () {\n    firmata.connect(function () {\n      console.log('connected')\n    }, error)\n  }\n\n  setSpeed (dir, pwm, speed) {\n    const FORWARD = firmata.LOW\n    const REVERSE = firmata.HIGH\n\n    let direction = FORWARD\n    if (speed < 0) {\n      speed = 255 + speed\n      direction = REVERSE\n    }\n    console.log(`direction: ${direction ? 'reverse' : 'forward'}, speed: ${speed}`)\n    firmata.digitalWrite(dir, direction, success, error)\n    firmata.analogWrite(pwm, speed, success, error)\n  }\n\n  setLeftSpeed (speed) {\n    this.setSpeed(DIR_L, PWM_L, speed)\n  }\n\n  setRightSpeed (speed) {\n    this.setSpeed(DIR_R, PWM_R, speed)\n  }\n\n  setSpeeds (speeds) {\n    this.setLeftSpeed(speeds[0])\n    this.setRightSpeed(speeds[1])\n\n    if (this._safetyTimeout) {\n      clearTimeout(this._safetyTimeout)\n      this._safetyTimeout = null\n    }\n    this._safetyTimeout = setTimeout(function () {\n      this._safetyTimeout = null\n      this.setLeftSpeed(0)\n      this.setRightSpeed(0)\n    }.bind(this), 500)\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/TractorBeam.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/TractorBeam.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var WebRTC = __webpack_require__(3);\nvar WildEmitter = __webpack_require__(9);\nvar webrtcSupport = __webpack_require__(8);\nvar attachMediaStream = __webpack_require__(51);\nvar mockconsole = __webpack_require__(10);\nvar SocketIoConnection = __webpack_require__(53);\n\nfunction SimpleWebRTC(opts) {\n    var self = this;\n    var options = opts || {};\n    var config = this.config = {\n            url: 'https://sandbox.simplewebrtc.com:443/',\n            socketio: {/* 'force new connection':true*/},\n            connection: null,\n            debug: false,\n            localVideoEl: '',\n            remoteVideosEl: '',\n            enableDataChannels: true,\n            autoRequestMedia: false,\n            autoRemoveVideos: true,\n            adjustPeerVolume: false,\n            peerVolumeWhenSpeaking: 0.25,\n            media: {\n                video: true,\n                audio: true\n            },\n            receiveMedia: {\n                offerToReceiveAudio: 1,\n                offerToReceiveVideo: 1\n            },\n            localVideo: {\n                autoplay: true,\n                mirror: true,\n                muted: true\n            }\n        };\n    var item, connection;\n\n    // We also allow a 'logger' option. It can be any object that implements\n    // log, warn, and error methods.\n    // We log nothing by default, following \"the rule of silence\":\n    // http://www.linfo.org/rule_of_silence.html\n    this.logger = function () {\n        // we assume that if you're in debug mode and you didn't\n        // pass in a logger, you actually want to log as much as\n        // possible.\n        if (opts.debug) {\n            return opts.logger || console;\n        } else {\n        // or we'll use your logger which should have its own logic\n        // for output. Or we'll return the no-op.\n            return opts.logger || mockconsole;\n        }\n    }();\n\n    // set our config from options\n    for (item in options) {\n        this.config[item] = options[item];\n    }\n\n    // attach detected support for convenience\n    this.capabilities = webrtcSupport;\n\n    // call WildEmitter constructor\n    WildEmitter.call(this);\n\n    // create default SocketIoConnection if it's not passed in\n    if (this.config.connection === null) {\n        connection = this.connection = new SocketIoConnection(this.config);\n    } else {\n        connection = this.connection = this.config.connection;\n    }\n\n    connection.on('connect', function () {\n        self.emit('connectionReady', connection.getSessionid());\n        self.sessionReady = true;\n        self.testReadiness();\n    });\n\n    connection.on('message', function (message) {\n        var peers = self.webrtc.getPeers(message.from, message.roomType);\n        var peer;\n\n        if (message.type === 'offer') {\n            if (peers.length) {\n                peers.forEach(function (p) {\n                    if (p.sid == message.sid) peer = p;\n                });\n                //if (!peer) peer = peers[0]; // fallback for old protocol versions\n            }\n            if (!peer) {\n                peer = self.webrtc.createPeer({\n                    id: message.from,\n                    sid: message.sid,\n                    type: message.roomType,\n                    enableDataChannels: self.config.enableDataChannels && message.roomType !== 'screen',\n                    sharemyscreen: message.roomType === 'screen' && !message.broadcaster,\n                    broadcaster: message.roomType === 'screen' && !message.broadcaster ? self.connection.getSessionid() : null\n                });\n                self.emit('createdPeer', peer);\n            }\n            peer.handleMessage(message);\n        } else if (peers.length) {\n            peers.forEach(function (peer) {\n                if (message.sid) {\n                    if (peer.sid === message.sid) {\n                        peer.handleMessage(message);\n                    }\n                } else {\n                    peer.handleMessage(message);\n                }\n            });\n        }\n    });\n\n    connection.on('remove', function (room) {\n        if (room.id !== self.connection.getSessionid()) {\n            self.webrtc.removePeers(room.id, room.type);\n        }\n    });\n\n    // instantiate our main WebRTC helper\n    // using same logger from logic here\n    opts.logger = this.logger;\n    opts.debug = false;\n    this.webrtc = new WebRTC(opts);\n\n    // attach a few methods from underlying lib to simple.\n    ['mute', 'unmute', 'pauseVideo', 'resumeVideo', 'pause', 'resume', 'sendToAll', 'sendDirectlyToAll', 'getPeers'].forEach(function (method) {\n        self[method] = self.webrtc[method].bind(self.webrtc);\n    });\n\n    // proxy events from WebRTC\n    this.webrtc.on('*', function () {\n        self.emit.apply(self, arguments);\n    });\n\n    // log all events in debug mode\n    if (config.debug) {\n        this.on('*', this.logger.log.bind(this.logger, 'SimpleWebRTC event:'));\n    }\n\n    // check for readiness\n    this.webrtc.on('localStream', function () {\n        self.testReadiness();\n    });\n\n    this.webrtc.on('message', function (payload) {\n        self.connection.emit('message', payload);\n    });\n\n    this.webrtc.on('peerStreamAdded', this.handlePeerStreamAdded.bind(this));\n    this.webrtc.on('peerStreamRemoved', this.handlePeerStreamRemoved.bind(this));\n\n    // echo cancellation attempts\n    if (this.config.adjustPeerVolume) {\n        this.webrtc.on('speaking', this.setVolumeForAll.bind(this, this.config.peerVolumeWhenSpeaking));\n        this.webrtc.on('stoppedSpeaking', this.setVolumeForAll.bind(this, 1));\n    }\n\n    connection.on('stunservers', function (args) {\n        // resets/overrides the config\n        self.webrtc.config.peerConnectionConfig.iceServers = args;\n        self.emit('stunservers', args);\n    });\n    connection.on('turnservers', function (args) {\n        // appends to the config\n        self.webrtc.config.peerConnectionConfig.iceServers = self.webrtc.config.peerConnectionConfig.iceServers.concat(args);\n        self.emit('turnservers', args);\n    });\n\n    this.webrtc.on('iceFailed', function (peer) {\n        // local ice failure\n    });\n    this.webrtc.on('connectivityError', function (peer) {\n        // remote ice failure\n    });\n\n\n    // sending mute/unmute to all peers\n    this.webrtc.on('audioOn', function () {\n        self.webrtc.sendToAll('unmute', {name: 'audio'});\n    });\n    this.webrtc.on('audioOff', function () {\n        self.webrtc.sendToAll('mute', {name: 'audio'});\n    });\n    this.webrtc.on('videoOn', function () {\n        self.webrtc.sendToAll('unmute', {name: 'video'});\n    });\n    this.webrtc.on('videoOff', function () {\n        self.webrtc.sendToAll('mute', {name: 'video'});\n    });\n\n    // screensharing events\n    this.webrtc.on('localScreen', function (stream) {\n        var item,\n            el = document.createElement('video'),\n            container = self.getRemoteVideoContainer();\n\n        el.oncontextmenu = function () { return false; };\n        el.id = 'localScreen';\n        attachMediaStream(stream, el);\n        if (container) {\n            container.appendChild(el);\n        }\n\n        self.emit('localScreenAdded', el);\n        self.connection.emit('shareScreen');\n\n        self.webrtc.peers.forEach(function (existingPeer) {\n            var peer;\n            if (existingPeer.type === 'video') {\n                peer = self.webrtc.createPeer({\n                    id: existingPeer.id,\n                    type: 'screen',\n                    sharemyscreen: true,\n                    enableDataChannels: false,\n                    receiveMedia: {\n                        offerToReceiveAudio: 0,\n                        offerToReceiveVideo: 0\n                    },\n                    broadcaster: self.connection.getSessionid(),\n                });\n                self.emit('createdPeer', peer);\n                peer.start();\n            }\n        });\n    });\n    this.webrtc.on('localScreenStopped', function (stream) {\n        self.stopScreenShare();\n        /*\n        self.connection.emit('unshareScreen');\n        self.webrtc.peers.forEach(function (peer) {\n            if (peer.sharemyscreen) {\n                peer.end();\n            }\n        });\n        */\n    });\n\n    this.webrtc.on('channelMessage', function (peer, label, data) {\n        if (data.type == 'volume') {\n            self.emit('remoteVolumeChange', peer, data.volume);\n        }\n    });\n\n    if (this.config.autoRequestMedia) this.startLocalVideo();\n}\n\n\nSimpleWebRTC.prototype = Object.create(WildEmitter.prototype, {\n    constructor: {\n        value: SimpleWebRTC\n    }\n});\n\nSimpleWebRTC.prototype.leaveRoom = function () {\n    if (this.roomName) {\n        this.connection.emit('leave');\n        while (this.webrtc.peers.length) {\n            this.webrtc.peers.shift().end();\n        }\n        if (this.getLocalScreen()) {\n            this.stopScreenShare();\n        }\n        this.emit('leftRoom', this.roomName);\n        this.roomName = undefined;\n    }\n};\n\nSimpleWebRTC.prototype.disconnect = function () {\n    this.connection.disconnect();\n    delete this.connection;\n};\n\nSimpleWebRTC.prototype.handlePeerStreamAdded = function (peer) {\n    var self = this;\n    var container = this.getRemoteVideoContainer();\n    var video = attachMediaStream(peer.stream);\n\n    // store video element as part of peer for easy removal\n    peer.videoEl = video;\n    video.id = this.getDomId(peer);\n\n    if (container) container.appendChild(video);\n\n    this.emit('videoAdded', video, peer);\n\n    // send our mute status to new peer if we're muted\n    // currently called with a small delay because it arrives before\n    // the video element is created otherwise (which happens after\n    // the async setRemoteDescription-createAnswer)\n    window.setTimeout(function () {\n        if (!self.webrtc.isAudioEnabled()) {\n            peer.send('mute', {name: 'audio'});\n        }\n        if (!self.webrtc.isVideoEnabled()) {\n            peer.send('mute', {name: 'video'});\n        }\n    }, 250);\n};\n\nSimpleWebRTC.prototype.handlePeerStreamRemoved = function (peer) {\n    var container = this.getRemoteVideoContainer();\n    var videoEl = peer.videoEl;\n    if (this.config.autoRemoveVideos && container && videoEl) {\n        container.removeChild(videoEl);\n    }\n    if (videoEl) this.emit('videoRemoved', videoEl, peer);\n};\n\nSimpleWebRTC.prototype.getDomId = function (peer) {\n    return [peer.id, peer.type, peer.broadcaster ? 'broadcasting' : 'incoming'].join('_');\n};\n\n// set volume on video tag for all peers takse a value between 0 and 1\nSimpleWebRTC.prototype.setVolumeForAll = function (volume) {\n    this.webrtc.peers.forEach(function (peer) {\n        if (peer.videoEl) peer.videoEl.volume = volume;\n    });\n};\n\nSimpleWebRTC.prototype.joinRoom = function (name, cb) {\n    var self = this;\n    this.roomName = name;\n    this.connection.emit('join', name, function (err, roomDescription) {\n        console.log('join CB', err, roomDescription);\n        if (err) {\n            self.emit('error', err);\n        } else {\n            var id,\n                client,\n                type,\n                peer;\n            for (id in roomDescription.clients) {\n                client = roomDescription.clients[id];\n                for (type in client) {\n                    if (client[type]) {\n                        peer = self.webrtc.createPeer({\n                            id: id,\n                            type: type,\n                            enableDataChannels: self.config.enableDataChannels && type !== 'screen',\n                            receiveMedia: {\n                                offerToReceiveAudio: type !== 'screen' && self.config.receiveMedia.offerToReceiveAudio ? 1 : 0,\n                                offerToReceiveVideo: self.config.receiveMedia.offerToReceiveVideo\n                            }\n                        });\n                        self.emit('createdPeer', peer);\n                        peer.start();\n                    }\n                }\n            }\n        }\n\n        if (cb) cb(err, roomDescription);\n        self.emit('joinedRoom', name);\n    });\n};\n\nSimpleWebRTC.prototype.getEl = function (idOrEl) {\n    if (typeof idOrEl === 'string') {\n        return document.getElementById(idOrEl);\n    } else {\n        return idOrEl;\n    }\n};\n\nSimpleWebRTC.prototype.startLocalVideo = function () {\n    var self = this;\n    this.webrtc.startLocalMedia(this.config.media, function (err, stream) {\n        if (err) {\n            self.emit('localMediaError', err);\n        } else {\n            attachMediaStream(stream, self.getLocalVideoContainer(), self.config.localVideo);\n        }\n    });\n};\n\nSimpleWebRTC.prototype.stopLocalVideo = function () {\n    this.webrtc.stopLocalMedia();\n};\n\n// this accepts either element ID or element\n// and either the video tag itself or a container\n// that will be used to put the video tag into.\nSimpleWebRTC.prototype.getLocalVideoContainer = function () {\n    var el = this.getEl(this.config.localVideoEl);\n    if (el && el.tagName === 'VIDEO') {\n        el.oncontextmenu = function () { return false; };\n        return el;\n    } else if (el) {\n        var video = document.createElement('video');\n        video.oncontextmenu = function () { return false; };\n        el.appendChild(video);\n        return video;\n    } else {\n        return;\n    }\n};\n\nSimpleWebRTC.prototype.getRemoteVideoContainer = function () {\n    return this.getEl(this.config.remoteVideosEl);\n};\n\nSimpleWebRTC.prototype.shareScreen = function (cb) {\n    this.webrtc.startScreenShare(cb);\n};\n\nSimpleWebRTC.prototype.getLocalScreen = function () {\n    return this.webrtc.localScreen;\n};\n\nSimpleWebRTC.prototype.stopScreenShare = function () {\n    this.connection.emit('unshareScreen');\n    var videoEl = document.getElementById('localScreen');\n    var container = this.getRemoteVideoContainer();\n    var stream = this.getLocalScreen();\n\n    if (this.config.autoRemoveVideos && container && videoEl) {\n        container.removeChild(videoEl);\n    }\n\n    // a hack to emit the event the removes the video\n    // element that we want\n    if (videoEl) this.emit('videoRemoved', videoEl);\n    if (stream) stream.stop();\n    this.webrtc.peers.forEach(function (peer) {\n        if (peer.broadcaster) {\n            peer.end();\n        }\n    });\n    //delete this.webrtc.localScreen;\n};\n\nSimpleWebRTC.prototype.testReadiness = function () {\n    var self = this;\n    if (this.webrtc.localStreams.length > 0 && this.sessionReady) {\n        self.emit('readyToCall', self.connection.getSessionid());\n    }\n};\n\nSimpleWebRTC.prototype.createRoom = function (name, cb) {\n    this.roomName = name;\n    if (arguments.length === 2) {\n        this.connection.emit('create', name, cb);\n    } else {\n        this.connection.emit('create', name);\n    }\n};\n\nSimpleWebRTC.prototype.sendFile = function () {\n    if (!webrtcSupport.dataChannel) {\n        return this.emit('error', new Error('DataChannelNotSupported'));\n    }\n\n};\n\nmodule.exports = SimpleWebRTC;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/simplewebrtc.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/simplewebrtc.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("var util = __webpack_require__(4);\nvar webrtc = __webpack_require__(8);\nvar WildEmitter = __webpack_require__(9);\nvar mockconsole = __webpack_require__(10);\nvar localMedia = __webpack_require__(11);\nvar Peer = __webpack_require__(18);\n\n\nfunction WebRTC(opts) {\n    var self = this;\n    var options = opts || {};\n    var config = this.config = {\n            debug: false,\n            // makes the entire PC config overridable\n            peerConnectionConfig: {\n                iceServers: [{'urls': 'stun:stun.l.google.com:19302'}]\n            },\n            peerConnectionConstraints: {\n                optional: []\n            },\n            receiveMedia: {\n                offerToReceiveAudio: 1,\n                offerToReceiveVideo: 1\n            },\n            enableDataChannels: true\n        };\n    var item;\n\n    // expose screensharing check\n    this.screenSharingSupport = webrtc.screenSharing;\n\n    // We also allow a 'logger' option. It can be any object that implements\n    // log, warn, and error methods.\n    // We log nothing by default, following \"the rule of silence\":\n    // http://www.linfo.org/rule_of_silence.html\n    this.logger = function () {\n        // we assume that if you're in debug mode and you didn't\n        // pass in a logger, you actually want to log as much as\n        // possible.\n        if (opts.debug) {\n            return opts.logger || console;\n        } else {\n        // or we'll use your logger which should have its own logic\n        // for output. Or we'll return the no-op.\n            return opts.logger || mockconsole;\n        }\n    }();\n\n    // set options\n    for (item in options) {\n        this.config[item] = options[item];\n    }\n\n    // check for support\n    if (!webrtc.support) {\n        this.logger.error('Your browser doesn\\'t seem to support WebRTC');\n    }\n\n    // where we'll store our peer connections\n    this.peers = [];\n\n    // call localMedia constructor\n    localMedia.call(this, this.config);\n\n    this.on('speaking', function () {\n        if (!self.hardMuted) {\n            // FIXME: should use sendDirectlyToAll, but currently has different semantics wrt payload\n            self.peers.forEach(function (peer) {\n                if (peer.enableDataChannels) {\n                    var dc = peer.getDataChannel('hark');\n                    if (dc.readyState != 'open') return;\n                    dc.send(JSON.stringify({type: 'speaking'}));\n                }\n            });\n        }\n    });\n    this.on('stoppedSpeaking', function () {\n        if (!self.hardMuted) {\n            // FIXME: should use sendDirectlyToAll, but currently has different semantics wrt payload\n            self.peers.forEach(function (peer) {\n                if (peer.enableDataChannels) {\n                    var dc = peer.getDataChannel('hark');\n                    if (dc.readyState != 'open') return;\n                    dc.send(JSON.stringify({type: 'stoppedSpeaking'}));\n                }\n            });\n        }\n    });\n    this.on('volumeChange', function (volume, treshold) {\n        if (!self.hardMuted) {\n            // FIXME: should use sendDirectlyToAll, but currently has different semantics wrt payload\n            self.peers.forEach(function (peer) {\n                if (peer.enableDataChannels) {\n                    var dc = peer.getDataChannel('hark');\n                    if (dc.readyState != 'open') return;\n                    dc.send(JSON.stringify({type: 'volume', volume: volume }));\n                }\n            });\n        }\n    });\n\n    // log events in debug mode\n    if (this.config.debug) {\n        this.on('*', function (event, val1, val2) {\n            var logger;\n            // if you didn't pass in a logger and you explicitly turning on debug\n            // we're just going to assume you're wanting log output with console\n            if (self.config.logger === mockconsole) {\n                logger = console;\n            } else {\n                logger = self.logger;\n            }\n            logger.log('event:', event, val1, val2);\n        });\n    }\n}\n\nutil.inherits(WebRTC, localMedia);\n\nWebRTC.prototype.createPeer = function (opts) {\n    var peer;\n    opts.parent = this;\n    peer = new Peer(opts);\n    this.peers.push(peer);\n    return peer;\n};\n\n// removes peers\nWebRTC.prototype.removePeers = function (id, type) {\n    this.getPeers(id, type).forEach(function (peer) {\n        peer.end();\n    });\n};\n\n// fetches all Peer objects by session id and/or type\nWebRTC.prototype.getPeers = function (sessionId, type) {\n    return this.peers.filter(function (peer) {\n        return (!sessionId || peer.id === sessionId) && (!type || peer.type === type);\n    });\n};\n\n// sends message to all\nWebRTC.prototype.sendToAll = function (message, payload) {\n    this.peers.forEach(function (peer) {\n        peer.send(message, payload);\n    });\n};\n\n// sends message to all using a datachannel\n// only sends to anyone who has an open datachannel\nWebRTC.prototype.sendDirectlyToAll = function (channel, message, payload) {\n    this.peers.forEach(function (peer) {\n        if (peer.enableDataChannels) {\n            peer.sendDirectly(channel, message, payload);\n        }\n    });\n};\n\nmodule.exports = WebRTC;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/webrtc.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/webrtc.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(6);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(7);\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(5)))\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/util.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/util/util.js?");

/***/ },
/* 5 */
/***/ function(module, exports) {

	eval("// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js?");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js?");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("// created by @HenrikJoreteg\nvar prefix;\nvar version;\n\nif (window.mozRTCPeerConnection || navigator.mozGetUserMedia) {\n    prefix = 'moz';\n    version = parseInt(navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1], 10);\n} else if (window.webkitRTCPeerConnection || navigator.webkitGetUserMedia) {\n    prefix = 'webkit';\n    version = navigator.userAgent.match(/Chrom(e|ium)/) && parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n}\n\nvar PC = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nvar IceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\nvar SessionDescription = window.mozRTCSessionDescription || window.RTCSessionDescription;\nvar MediaStream = window.webkitMediaStream || window.MediaStream;\nvar screenSharing = window.location.protocol === 'https:' &&\n    ((prefix === 'webkit' && version >= 26) ||\n     (prefix === 'moz' && version >= 33))\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar videoEl = document.createElement('video');\nvar supportVp8 = videoEl && videoEl.canPlayType && videoEl.canPlayType('video/webm; codecs=\"vp8\", vorbis') === \"probably\";\nvar getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia;\n\n// export support flags and constructors.prototype && PC\nmodule.exports = {\n    prefix: prefix,\n    browserVersion: version,\n    support: !!PC && !!getUserMedia,\n    // new support style\n    supportRTCPeerConnection: !!PC,\n    supportVp8: supportVp8,\n    supportGetUserMedia: !!getUserMedia,\n    supportDataChannel: !!(PC && PC.prototype && PC.prototype.createDataChannel),\n    supportWebAudio: !!(AudioContext && AudioContext.prototype.createMediaStreamSource),\n    supportMediaStream: !!(MediaStream && MediaStream.prototype.removeTrack),\n    supportScreenSharing: !!screenSharing,\n    // constructors\n    AudioContext: AudioContext,\n    PeerConnection: PC,\n    SessionDescription: SessionDescription,\n    IceCandidate: IceCandidate,\n    MediaStream: MediaStream,\n    getUserMedia: getUserMedia\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/webrtcsupport/index-browser.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/webrtcsupport/index-browser.js?");

/***/ },
/* 9 */
/***/ function(module, exports) {

	eval("/*\r\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\r\non @visionmedia's Emitter from UI Kit.\r\n\r\nWhy? I wanted it standalone.\r\n\r\nI also wanted support for wildcard emitters like this:\r\n\r\nemitter.on('*', function (eventName, other, event, payloads) {\r\n\r\n});\r\n\r\nemitter.on('somenamespace*', function (eventName, payloads) {\r\n\r\n});\r\n\r\nPlease note that callbacks triggered by wildcard registered events also get\r\nthe event name as the first argument.\r\n*/\r\n\r\nmodule.exports = WildEmitter;\r\n\r\nfunction WildEmitter() { }\r\n\r\nWildEmitter.mixin = function (constructor) {\r\n    var prototype = constructor.prototype || constructor;\r\n\r\n    prototype.isWildEmitter= true;\r\n\r\n    // Listen on the given `event` with `fn`. Store a group name if present.\r\n    prototype.on = function (event, groupName, fn) {\r\n        this.callbacks = this.callbacks || {};\r\n        var hasGroup = (arguments.length === 3),\r\n            group = hasGroup ? arguments[1] : undefined,\r\n            func = hasGroup ? arguments[2] : arguments[1];\r\n        func._groupName = group;\r\n        (this.callbacks[event] = this.callbacks[event] || []).push(func);\r\n        return this;\r\n    };\r\n\r\n    // Adds an `event` listener that will be invoked a single\r\n    // time then automatically removed.\r\n    prototype.once = function (event, groupName, fn) {\r\n        var self = this,\r\n            hasGroup = (arguments.length === 3),\r\n            group = hasGroup ? arguments[1] : undefined,\r\n            func = hasGroup ? arguments[2] : arguments[1];\r\n        function on() {\r\n            self.off(event, on);\r\n            func.apply(this, arguments);\r\n        }\r\n        this.on(event, group, on);\r\n        return this;\r\n    };\r\n\r\n    // Unbinds an entire group\r\n    prototype.releaseGroup = function (groupName) {\r\n        this.callbacks = this.callbacks || {};\r\n        var item, i, len, handlers;\r\n        for (item in this.callbacks) {\r\n            handlers = this.callbacks[item];\r\n            for (i = 0, len = handlers.length; i < len; i++) {\r\n                if (handlers[i]._groupName === groupName) {\r\n                    //console.log('removing');\r\n                    // remove it and shorten the array we're looping through\r\n                    handlers.splice(i, 1);\r\n                    i--;\r\n                    len--;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // Remove the given callback for `event` or all\r\n    // registered callbacks.\r\n    prototype.off = function (event, fn) {\r\n        this.callbacks = this.callbacks || {};\r\n        var callbacks = this.callbacks[event],\r\n            i;\r\n\r\n        if (!callbacks) return this;\r\n\r\n        // remove all handlers\r\n        if (arguments.length === 1) {\r\n            delete this.callbacks[event];\r\n            return this;\r\n        }\r\n\r\n        // remove specific handler\r\n        i = callbacks.indexOf(fn);\r\n        callbacks.splice(i, 1);\r\n        if (callbacks.length === 0) {\r\n            delete this.callbacks[event];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /// Emit `event` with the given args.\r\n    // also calls any `*` handlers\r\n    prototype.emit = function (event) {\r\n        this.callbacks = this.callbacks || {};\r\n        var args = [].slice.call(arguments, 1),\r\n            callbacks = this.callbacks[event],\r\n            specialCallbacks = this.getWildcardCallbacks(event),\r\n            i,\r\n            len,\r\n            item,\r\n            listeners;\r\n\r\n        if (callbacks) {\r\n            listeners = callbacks.slice();\r\n            for (i = 0, len = listeners.length; i < len; ++i) {\r\n                if (!listeners[i]) {\r\n                    break;\r\n                }\r\n                listeners[i].apply(this, args);\r\n            }\r\n        }\r\n\r\n        if (specialCallbacks) {\r\n            len = specialCallbacks.length;\r\n            listeners = specialCallbacks.slice();\r\n            for (i = 0, len = listeners.length; i < len; ++i) {\r\n                if (!listeners[i]) {\r\n                    break;\r\n                }\r\n                listeners[i].apply(this, [event].concat(args));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    // Helper for for finding special wildcard event handlers that match the event\r\n    prototype.getWildcardCallbacks = function (eventName) {\r\n        this.callbacks = this.callbacks || {};\r\n        var item,\r\n            split,\r\n            result = [];\r\n\r\n        for (item in this.callbacks) {\r\n            split = item.split('*');\r\n            if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\r\n                result = result.concat(this.callbacks[item]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n};\r\n\r\nWildEmitter.mixin(WildEmitter);\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/wildemitter/wildemitter.js\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/wildemitter/wildemitter.js?");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("var methods = \"assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn\".split(\",\");\nvar l = methods.length;\nvar fn = function () {};\nvar mockconsole = {};\n\nwhile (l--) {\n    mockconsole[methods[l]] = fn;\n}\n\nmodule.exports = mockconsole;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/mockconsole/mockconsole.js\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/mockconsole/mockconsole.js?");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("var util = __webpack_require__(4);\nvar hark = __webpack_require__(12);\nvar webrtc = __webpack_require__(13);\nvar getUserMedia = __webpack_require__(14);\nvar getScreenMedia = __webpack_require__(16);\nvar WildEmitter = __webpack_require__(9);\nvar GainController = __webpack_require__(17);\nvar mockconsole = __webpack_require__(10);\n\n\nfunction LocalMedia(opts) {\n    WildEmitter.call(this);\n\n    var config = this.config = {\n        autoAdjustMic: false,\n        detectSpeakingEvents: false,\n        audioFallback: false,\n        media: {\n            audio: true,\n            video: true\n        },\n        logger: mockconsole\n    };\n\n    var item;\n    for (item in opts) {\n        this.config[item] = opts[item];\n    }\n\n    this.logger = config.logger;\n    this._log = this.logger.log.bind(this.logger, 'LocalMedia:');\n    this._logerror = this.logger.error.bind(this.logger, 'LocalMedia:');\n\n    this.screenSharingSupport = webrtc.screenSharing;\n\n    this.localStreams = [];\n    this.localScreens = [];\n\n    if (!webrtc.support) {\n        this._logerror('Your browser does not support local media capture.');\n    }\n}\n\nutil.inherits(LocalMedia, WildEmitter);\n\n\nLocalMedia.prototype.start = function (mediaConstraints, cb) {\n    var self = this;\n    var constraints = mediaConstraints || this.config.media;\n\n    getUserMedia(constraints, function (err, stream) {\n\n        if (!err) {\n            if (constraints.audio && self.config.detectSpeakingEvents) {\n                self.setupAudioMonitor(stream, self.config.harkOptions);\n            }\n            self.localStreams.push(stream);\n\n            if (self.config.autoAdjustMic) {\n                self.gainController = new GainController(stream);\n                // start out somewhat muted if we can track audio\n                self.setMicIfEnabled(0.5);\n            }\n\n            // TODO: might need to migrate to the video tracks onended\n            // FIXME: firefox does not seem to trigger this...\n            stream.onended = function () {\n                /*\n                var idx = self.localStreams.indexOf(stream);\n                if (idx > -1) {\n                    self.localScreens.splice(idx, 1);\n                }\n                self.emit('localStreamStopped', stream);\n                */\n            };\n\n            self.emit('localStream', stream);\n        } else {\n            // Fallback for users without a camera\n            if (self.config.audioFallback && err.name === 'DevicesNotFoundError' && constraints.video !== false) {\n                constraints.video = false;\n                self.start(constraints, cb);\n                return;\n            }\n        }\n        if (cb) {\n            return cb(err, stream);\n        }\n    });\n};\n\nLocalMedia.prototype.stop = function (stream) {\n    var self = this;\n    // FIXME: duplicates cleanup code until fixed in FF\n    if (stream) {\n        stream.getTracks().forEach(function (track) { track.stop(); });\n        var idx = self.localStreams.indexOf(stream);\n        if (idx > -1) {\n            self.emit('localStreamStopped', stream);\n            self.localStreams = self.localStreams.splice(idx, 1);\n        } else {\n            idx = self.localScreens.indexOf(stream);\n            if (idx > -1) {\n                self.emit('localScreenStopped', stream);\n                self.localScreens = self.localScreens.splice(idx, 1);\n            }\n        }\n    } else {\n        this.stopStreams();\n        this.stopScreenShare();\n    }\n};\n\nLocalMedia.prototype.stopStreams = function () {\n    var self = this;\n    if (this.audioMonitor) {\n        this.audioMonitor.stop();\n        delete this.audioMonitor;\n    }\n    this.localStreams.forEach(function (stream) {\n        stream.getTracks().forEach(function (track) { track.stop(); });\n        self.emit('localStreamStopped', stream);\n    });\n    this.localStreams = [];\n};\n\nLocalMedia.prototype.startScreenShare = function (cb) {\n    var self = this;\n    getScreenMedia(function (err, stream) {\n        if (!err) {\n            self.localScreens.push(stream);\n\n            // TODO: might need to migrate to the video tracks onended\n            // Firefox does not support .onended but it does not support\n            // screensharing either\n            stream.onended = function () {\n                var idx = self.localScreens.indexOf(stream);\n                if (idx > -1) {\n                    self.localScreens.splice(idx, 1);\n                }\n                self.emit('localScreenStopped', stream);\n            };\n            self.emit('localScreen', stream);\n        }\n\n        // enable the callback\n        if (cb) {\n            return cb(err, stream);\n        }\n    });\n};\n\nLocalMedia.prototype.stopScreenShare = function (stream) {\n    var self = this;\n    if (stream) {\n        stream.getTracks().forEach(function (track) { track.stop(); });\n        this.emit('localScreenStopped', stream);\n    } else {\n        this.localScreens.forEach(function (stream) {\n            stream.getTracks().forEach(function (track) { track.stop(); });\n            self.emit('localScreenStopped', stream);\n        });\n        this.localScreens = [];\n    }\n};\n\n// Audio controls\nLocalMedia.prototype.mute = function () {\n    this._audioEnabled(false);\n    this.hardMuted = true;\n    this.emit('audioOff');\n};\n\nLocalMedia.prototype.unmute = function () {\n    this._audioEnabled(true);\n    this.hardMuted = false;\n    this.emit('audioOn');\n};\n\nLocalMedia.prototype.setupAudioMonitor = function (stream, harkOptions) {\n    this._log('Setup audio');\n    var audio = this.audioMonitor = hark(stream, harkOptions);\n    var self = this;\n    var timeout;\n\n    audio.on('speaking', function () {\n        self.emit('speaking');\n        if (self.hardMuted) {\n            return;\n        }\n        self.setMicIfEnabled(1);\n    });\n\n    audio.on('stopped_speaking', function () {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        timeout = setTimeout(function () {\n            self.emit('stoppedSpeaking');\n            if (self.hardMuted) {\n                return;\n            }\n            self.setMicIfEnabled(0.5);\n        }, 1000);\n    });\n    audio.on('volume_change', function (volume, treshold) {\n        self.emit('volumeChange', volume, treshold);\n    });\n};\n\n// We do this as a seperate method in order to\n// still leave the \"setMicVolume\" as a working\n// method.\nLocalMedia.prototype.setMicIfEnabled = function (volume) {\n    if (!this.config.autoAdjustMic) {\n        return;\n    }\n    this.gainController.setGain(volume);\n};\n\n// Video controls\nLocalMedia.prototype.pauseVideo = function () {\n    this._videoEnabled(false);\n    this.emit('videoOff');\n};\nLocalMedia.prototype.resumeVideo = function () {\n    this._videoEnabled(true);\n    this.emit('videoOn');\n};\n\n// Combined controls\nLocalMedia.prototype.pause = function () {\n    this.mute();\n    this.pauseVideo();\n};\nLocalMedia.prototype.resume = function () {\n    this.unmute();\n    this.resumeVideo();\n};\n\n// Internal methods for enabling/disabling audio/video\nLocalMedia.prototype._audioEnabled = function (bool) {\n    // work around for chrome 27 bug where disabling tracks\n    // doesn't seem to work (works in canary, remove when working)\n    this.setMicIfEnabled(bool ? 1 : 0);\n    this.localStreams.forEach(function (stream) {\n        stream.getAudioTracks().forEach(function (track) {\n            track.enabled = !!bool;\n        });\n    });\n};\nLocalMedia.prototype._videoEnabled = function (bool) {\n    this.localStreams.forEach(function (stream) {\n        stream.getVideoTracks().forEach(function (track) {\n            track.enabled = !!bool;\n        });\n    });\n};\n\n// check if all audio streams are enabled\nLocalMedia.prototype.isAudioEnabled = function () {\n    var enabled = true;\n    this.localStreams.forEach(function (stream) {\n        stream.getAudioTracks().forEach(function (track) {\n            enabled = enabled && track.enabled;\n        });\n    });\n    return enabled;\n};\n\n// check if all video streams are enabled\nLocalMedia.prototype.isVideoEnabled = function () {\n    var enabled = true;\n    this.localStreams.forEach(function (stream) {\n        stream.getVideoTracks().forEach(function (track) {\n            enabled = enabled && track.enabled;\n        });\n    });\n    return enabled;\n};\n\n// Backwards Compat\nLocalMedia.prototype.startLocalMedia = LocalMedia.prototype.start;\nLocalMedia.prototype.stopLocalMedia = LocalMedia.prototype.stop;\n\n// fallback for old .localStream behaviour\nObject.defineProperty(LocalMedia.prototype, 'localStream', {\n    get: function () {\n        return this.localStreams.length > 0 ? this.localStreams[0] : null;\n    }\n});\n// fallback for old .localScreen behaviour\nObject.defineProperty(LocalMedia.prototype, 'localScreen', {\n    get: function () {\n        return this.localScreens.length > 0 ? this.localScreens[0] : null;\n    }\n});\n\nmodule.exports = LocalMedia;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/index.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/index.js?");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("var WildEmitter = __webpack_require__(9);\n\nfunction getMaxVolume (analyser, fftBins) {\n  var maxVolume = -Infinity;\n  analyser.getFloatFrequencyData(fftBins);\n\n  for(var i=4, ii=fftBins.length; i < ii; i++) {\n    if (fftBins[i] > maxVolume && fftBins[i] < 0) {\n      maxVolume = fftBins[i];\n    }\n  };\n\n  return maxVolume;\n}\n\n\nvar audioContextType = window.AudioContext || window.webkitAudioContext;\n// use a single audio context due to hardware limits\nvar audioContext = null;\nmodule.exports = function(stream, options) {\n  var harker = new WildEmitter();\n\n\n  // make it not break in non-supported browsers\n  if (!audioContextType) return harker;\n\n  //Config\n  var options = options || {},\n      smoothing = (options.smoothing || 0.1),\n      interval = (options.interval || 50),\n      threshold = options.threshold,\n      play = options.play,\n      history = options.history || 10,\n      running = true;\n\n  //Setup Audio Context\n  if (!audioContext) {\n    audioContext = new audioContextType();\n  }\n  var sourceNode, fftBins, analyser;\n\n  analyser = audioContext.createAnalyser();\n  analyser.fftSize = 512;\n  analyser.smoothingTimeConstant = smoothing;\n  fftBins = new Float32Array(analyser.fftSize);\n\n  if (stream.jquery) stream = stream[0];\n  if (stream instanceof HTMLAudioElement || stream instanceof HTMLVideoElement) {\n    //Audio Tag\n    sourceNode = audioContext.createMediaElementSource(stream);\n    if (typeof play === 'undefined') play = true;\n    threshold = threshold || -50;\n  } else {\n    //WebRTC Stream\n    sourceNode = audioContext.createMediaStreamSource(stream);\n    threshold = threshold || -50;\n  }\n\n  sourceNode.connect(analyser);\n  if (play) analyser.connect(audioContext.destination);\n\n  harker.speaking = false;\n\n  harker.setThreshold = function(t) {\n    threshold = t;\n  };\n\n  harker.setInterval = function(i) {\n    interval = i;\n  };\n  \n  harker.stop = function() {\n    running = false;\n    harker.emit('volume_change', -100, threshold);\n    if (harker.speaking) {\n      harker.speaking = false;\n      harker.emit('stopped_speaking');\n    }\n  };\n  harker.speakingHistory = [];\n  for (var i = 0; i < history; i++) {\n      harker.speakingHistory.push(0);\n  }\n\n  // Poll the analyser node to determine if speaking\n  // and emit events if changed\n  var looper = function() {\n    setTimeout(function() {\n    \n      //check if stop has been called\n      if(!running) {\n        return;\n      }\n      \n      var currentVolume = getMaxVolume(analyser, fftBins);\n\n      harker.emit('volume_change', currentVolume, threshold);\n\n      var history = 0;\n      if (currentVolume > threshold && !harker.speaking) {\n        // trigger quickly, short history\n        for (var i = harker.speakingHistory.length - 3; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history >= 2) {\n          harker.speaking = true;\n          harker.emit('speaking');\n        }\n      } else if (currentVolume < threshold && harker.speaking) {\n        for (var i = 0; i < harker.speakingHistory.length; i++) {\n          history += harker.speakingHistory[i];\n        }\n        if (history == 0) {\n          harker.speaking = false;\n          harker.emit('stopped_speaking');\n        }\n      }\n      harker.speakingHistory.shift();\n      harker.speakingHistory.push(0 + (currentVolume > threshold));\n\n      looper();\n    }, interval);\n  };\n  looper();\n\n\n  return harker;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/hark/hark.js\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/hark/hark.js?");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("// created by @HenrikJoreteg\nvar prefix;\nvar version;\n\nif (window.mozRTCPeerConnection || navigator.mozGetUserMedia) {\n    prefix = 'moz';\n    version = parseInt(navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1], 10);\n} else if (window.webkitRTCPeerConnection || navigator.webkitGetUserMedia) {\n    prefix = 'webkit';\n    version = navigator.userAgent.match(/Chrom(e|ium)/) && parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n}\n\nvar PC = window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nvar IceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\nvar SessionDescription = window.mozRTCSessionDescription || window.RTCSessionDescription;\nvar MediaStream = window.webkitMediaStream || window.MediaStream;\nvar screenSharing = window.location.protocol === 'https:' &&\n    ((prefix === 'webkit' && version >= 26) ||\n     (prefix === 'moz' && version >= 33))\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar videoEl = document.createElement('video');\nvar supportVp8 = videoEl && videoEl.canPlayType && videoEl.canPlayType('video/webm; codecs=\"vp8\", vorbis') === \"probably\";\nvar getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia;\n\n// export support flags and constructors.prototype && PC\nmodule.exports = {\n    prefix: prefix,\n    browserVersion: version,\n    support: !!PC && supportVp8 && !!getUserMedia,\n    // new support style\n    supportRTCPeerConnection: !!PC,\n    supportVp8: supportVp8,\n    supportGetUserMedia: !!getUserMedia,\n    supportDataChannel: !!(PC && PC.prototype && PC.prototype.createDataChannel),\n    supportWebAudio: !!(AudioContext && AudioContext.prototype.createMediaStreamSource),\n    supportMediaStream: !!(MediaStream && MediaStream.prototype.removeTrack),\n    supportScreenSharing: !!screenSharing,\n    // old deprecated style. Dont use this anymore\n    dataChannel: !!(PC && PC.prototype && PC.prototype.createDataChannel),\n    webAudio: !!(AudioContext && AudioContext.prototype.createMediaStreamSource),\n    mediaStream: !!(MediaStream && MediaStream.prototype.removeTrack),\n    screenSharing: !!screenSharing,\n    // constructors\n    AudioContext: AudioContext,\n    PeerConnection: PC,\n    SessionDescription: SessionDescription,\n    IceCandidate: IceCandidate,\n    MediaStream: MediaStream,\n    getUserMedia: getUserMedia\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/webrtcsupport/index-browser.js\n ** module id = 13\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/webrtcsupport/index-browser.js?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("// getUserMedia helper by @HenrikJoreteg\nvar adapter = __webpack_require__(15);\n\nmodule.exports = function (constraints, cb) {\n    var options, error;\n    var haveOpts = arguments.length === 2;\n    var defaultOpts = {video: true, audio: true};\n\n    var denied = 'PermissionDeniedError';\n    var altDenied = 'PERMISSION_DENIED';\n    var notSatisfied = 'ConstraintNotSatisfiedError';\n\n    // make constraints optional\n    if (!haveOpts) {\n        cb = constraints;\n        constraints = defaultOpts;\n    }\n\n    // treat lack of browser support like an error\n    if (!navigator.getUserMedia) {\n        // throw proper error per spec\n        error = new Error('MediaStreamError');\n        error.name = 'NotSupportedError';\n\n        // keep all callbacks async\n        return window.setTimeout(function () {\n            cb(error);\n        }, 0);\n    }\n\n    // normalize error handling when no media types are requested\n    if (!constraints.audio && !constraints.video) {\n        error = new Error('MediaStreamError');\n        error.name = 'NoMediaRequestedError';\n\n        // keep all callbacks async\n        return window.setTimeout(function () {\n            cb(error);\n        }, 0);\n    }\n\n    // testing support\n    if (localStorage && localStorage.useFirefoxFakeDevice === \"true\") {\n        constraints.fake = true;\n    }\n\n    navigator.getUserMedia(constraints, function (stream) {\n        cb(null, stream);\n    }, function (err) {\n        var error;\n        // coerce into an error object since FF gives us a string\n        // there are only two valid names according to the spec\n        // we coerce all non-denied to \"constraint not satisfied\".\n        if (typeof err === 'string') {\n            error = new Error('MediaStreamError');\n            if (err === denied || err === altDenied) {\n                error.name = denied;\n            } else {\n                error.name = notSatisfied;\n            }\n        } else {\n            // if we get an error object make sure '.name' property is set\n            // according to spec: http://dev.w3.org/2011/webrtc/editor/getusermedia.html#navigatorusermediaerror-and-navigatorusermediaerrorcallback\n            error = err;\n            if (!error.name) {\n                // this is likely chrome which\n                // sets a property called \"ERROR_DENIED\" on the error object\n                // if so we make sure to set a name\n                if (error[denied]) {\n                    err.name = denied;\n                } else {\n                    err.name = notSatisfied;\n                }\n            }\n        }\n\n        cb(error);\n    });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/getusermedia/index-browser.js\n ** module id = 14\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/getusermedia/index-browser.js?");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n/* jshint browser: true, camelcase: true, curly: true, devel: true,\n   eqeqeq: true, forin: false, globalstrict: true, node: true,\n   quotmark: single, undef: true, unused: strict */\n/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,\nmozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */\n/* exported trace,requestUserMedia */\n\n'use strict';\n\nvar getUserMedia = null;\nvar attachMediaStream = null;\nvar reattachMediaStream = null;\nvar webrtcDetectedBrowser = null;\nvar webrtcDetectedVersion = null;\nvar webrtcMinimumVersion = null;\nvar webrtcUtils = {\n  log: function() {\n    // suppress console.log output when being included as a module.\n    if (true) {\n      return;\n    }\n    console.log.apply(console, arguments);\n  },\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos]);\n  }\n};\n\nfunction trace(text) {\n  // This function is used for logging.\n  if (text[text.length - 1] === '\\n') {\n    text = text.substring(0, text.length - 1);\n  }\n  if (window.performance) {\n    var now = (window.performance.now() / 1000).toFixed(3);\n    webrtcUtils.log(now + ': ' + text);\n  } else {\n    webrtcUtils.log(text);\n  }\n}\n\nif (typeof window === 'object') {\n  if (window.HTMLMediaElement &&\n    !('srcObject' in window.HTMLMediaElement.prototype)) {\n    // Shim the srcObject property, once, when HTMLMediaElement is found.\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n      get: function() {\n        // If prefixed srcObject property exists, return it.\n        // Otherwise use the shimmed property, _srcObject\n        return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;\n      },\n      set: function(stream) {\n        if ('mozSrcObject' in this) {\n          this.mozSrcObject = stream;\n        } else {\n          // Use _srcObject as a private property for this shim\n          this._srcObject = stream;\n          // TODO: revokeObjectUrl(this.src) when !stream to release resources?\n          this.src = URL.createObjectURL(stream);\n        }\n      }\n    });\n  }\n  // Proxy existing globals\n  getUserMedia = window.navigator && window.navigator.getUserMedia;\n}\n\n// Attach a media stream to an element.\nattachMediaStream = function(element, stream) {\n  element.srcObject = stream;\n};\n\nreattachMediaStream = function(to, from) {\n  to.srcObject = from.srcObject;\n};\n\nif (typeof window === 'undefined' || !window.navigator) {\n  webrtcUtils.log('This does not appear to be a browser');\n  webrtcDetectedBrowser = 'not a browser';\n} else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Firefox');\n\n  webrtcDetectedBrowser = 'firefox';\n\n  // the detected firefox version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Firefox\\/([0-9]+)\\./, 1);\n\n  // the minimum firefox version still supported by adapter.\n  webrtcMinimumVersion = 31;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (webrtcDetectedVersion < 38) {\n      // .urls is not supported in FF < 38.\n      // create RTCIceServers with a single url.\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (server.hasOwnProperty('urls')) {\n            for (var j = 0; j < server.urls.length; j++) {\n              var newServer = {\n                url: server.urls[j]\n              };\n              if (server.urls[j].indexOf('turn') === 0) {\n                newServer.username = server.username;\n                newServer.credential = server.credential;\n              }\n              newIceServers.push(newServer);\n            }\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n    }\n    return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n  };\n\n  // The RTCSessionDescription object.\n  if (!window.RTCSessionDescription) {\n    window.RTCSessionDescription = mozRTCSessionDescription;\n  }\n\n  // The RTCIceCandidate object.\n  if (!window.RTCIceCandidate) {\n    window.RTCIceCandidate = mozRTCIceCandidate;\n  }\n\n  // getUserMedia constraints shim.\n  getUserMedia = function(constraints, onSuccess, onError) {\n    var constraintsToFF37 = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r.min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    if (webrtcDetectedVersion < 38) {\n      webrtcUtils.log('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37(constraints.video);\n      }\n      webrtcUtils.log('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, onError);\n  };\n\n  navigator.getUserMedia = getUserMedia;\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n    return new Promise(function(resolve) {\n      var infos = [\n        {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n        {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n      ];\n      resolve(infos);\n    });\n  };\n\n  if (webrtcDetectedVersion < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n} else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Chrome');\n\n  webrtcDetectedBrowser = 'chrome';\n\n  // the detected chrome version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n  // the minimum chrome version still supported by adapter.\n  webrtcMinimumVersion = 38;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    // Translate iceTransportPolicy to iceTransports,\n    // see https://code.google.com/p/webrtc/issues/detail?id=4869\n    if (pcConfig && pcConfig.iceTransportPolicy) {\n      pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n    }\n\n    var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n    var origGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, errorCallback) { // jshint ignore: line\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats(selector, successCallback);\n      }\n\n      var fixChromeStats = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper = function(response) {\n          args[1](fixChromeStats(response));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        if (args.length === 1 && selector === null) {\n          origGetStats.apply(self, [\n              function(response) {\n                resolve.apply(null, [fixChromeStats(response)]);\n              }, reject]);\n        } else {\n          origGetStats.apply(self, [resolve, reject]);\n        }\n      });\n    };\n\n    return pc;\n  };\n\n  // add promise support\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var self = this;\n      if (arguments.length < 1 || (arguments.length === 1 &&\n          typeof(arguments[0]) === 'object')) {\n        var opts = arguments.length === 1 ? arguments[0] : undefined;\n        return new Promise(function(resolve, reject) {\n          nativeMethod.apply(self, [resolve, reject, opts]);\n        });\n      } else {\n        return nativeMethod.apply(this, arguments);\n      }\n    };\n  });\n\n  ['setLocalDescription', 'setRemoteDescription',\n      'addIceCandidate'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        nativeMethod.apply(self, [args[0],\n            function() {\n              resolve();\n              if (args.length >= 2) {\n                args[1].apply(null, []);\n              }\n            },\n            function(err) {\n              reject(err);\n              if (args.length >= 3) {\n                args[2].apply(null, [err]);\n              }\n            }]\n          );\n      });\n    };\n  });\n\n  // getUserMedia constraints shim.\n  var constraintsToChrome = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  getUserMedia = function(constraints, onSuccess, onError) {\n    if (constraints.audio) {\n      constraints.audio = constraintsToChrome(constraints.audio);\n    }\n    if (constraints.video) {\n      constraints.video = constraintsToChrome(constraints.video);\n    }\n    webrtcUtils.log('chrome: ' + JSON.stringify(constraints));\n    return navigator.webkitGetUserMedia(constraints, onSuccess, onError);\n  };\n  navigator.getUserMedia = getUserMedia;\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n                              enumerateDevices: function() {\n      return new Promise(function(resolve) {\n        var kinds = {audio: 'audioinput', video: 'videoinput'};\n        return MediaStreamTrack.getSources(function(devices) {\n          resolve(devices.map(function(device) {\n            return {label: device.label,\n                    kind: kinds[device.kind],\n                    deviceId: device.id,\n                    groupId: ''};\n          }));\n        });\n      });\n    }};\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return requestUserMedia(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment\n      c.audio = constraintsToChrome(c.audio);\n      c.video = constraintsToChrome(c.video);\n      webrtcUtils.log('chrome: ' + JSON.stringify(c));\n      return origGetUserMedia(c);\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n\n  // Attach a media stream to an element.\n  attachMediaStream = function(element, stream) {\n    if (webrtcDetectedVersion >= 43) {\n      element.srcObject = stream;\n    } else if (typeof element.src !== 'undefined') {\n      element.src = URL.createObjectURL(stream);\n    } else {\n      webrtcUtils.log('Error attaching stream to element.');\n    }\n  };\n  reattachMediaStream = function(to, from) {\n    if (webrtcDetectedVersion >= 43) {\n      to.srcObject = from.srcObject;\n    } else {\n      to.src = from.src;\n    }\n  };\n\n} else if (navigator.mediaDevices && navigator.userAgent.match(\n    /Edge\\/(\\d+).(\\d+)$/)) {\n  webrtcUtils.log('This appears to be Edge');\n  webrtcDetectedBrowser = 'edge';\n\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Edge\\/(\\d+).(\\d+)$/, 2);\n\n  // the minimum version still supported by adapter.\n  webrtcMinimumVersion = 12;\n} else {\n  webrtcUtils.log('Browser does not appear to be WebRTC-capable');\n}\n\n// Returns the result of getUserMedia as a Promise.\nfunction requestUserMedia(constraints) {\n  return new Promise(function(resolve, reject) {\n    getUserMedia(constraints, resolve, reject);\n  });\n}\n\nvar webrtcTesting = {};\ntry {\n  Object.defineProperty(webrtcTesting, 'version', {\n    set: function(version) {\n      webrtcDetectedVersion = version;\n    }\n  });\n} catch (e) {}\n\nif (true) {\n  var RTCPeerConnection;\n  if (typeof window !== 'undefined') {\n    RTCPeerConnection = window.RTCPeerConnection;\n  }\n  module.exports = {\n    RTCPeerConnection: RTCPeerConnection,\n    getUserMedia: getUserMedia,\n    attachMediaStream: attachMediaStream,\n    reattachMediaStream: reattachMediaStream,\n    webrtcDetectedBrowser: webrtcDetectedBrowser,\n    webrtcDetectedVersion: webrtcDetectedVersion,\n    webrtcMinimumVersion: webrtcMinimumVersion,\n    webrtcTesting: webrtcTesting,\n    webrtcUtils: webrtcUtils\n    //requestUserMedia: not exposed on purpose.\n    //trace: not exposed on purpose.\n  };\n} else if ((typeof require === 'function') && (typeof define === 'function')) {\n  // Expose objects and functions when RequireJS is doing the loading.\n  define([], function() {\n    return {\n      RTCPeerConnection: window.RTCPeerConnection,\n      getUserMedia: getUserMedia,\n      attachMediaStream: attachMediaStream,\n      reattachMediaStream: reattachMediaStream,\n      webrtcDetectedBrowser: webrtcDetectedBrowser,\n      webrtcDetectedVersion: webrtcDetectedVersion,\n      webrtcMinimumVersion: webrtcMinimumVersion,\n      webrtcTesting: webrtcTesting,\n      webrtcUtils: webrtcUtils\n      //requestUserMedia: not exposed on purpose.\n      //trace: not exposed on purpose.\n    };\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/getusermedia/~/webrtc-adapter-test/adapter.js\n ** module id = 15\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/getusermedia/~/webrtc-adapter-test/adapter.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("// getScreenMedia helper by @HenrikJoreteg\nvar getUserMedia = __webpack_require__(14);\n\n// cache for constraints and callback\nvar cache = {};\n\nmodule.exports = function (constraints, cb) {\n    var hasConstraints = arguments.length === 2;\n    var callback = hasConstraints ? cb : constraints;\n    var error;\n\n    if (typeof window === 'undefined' || window.location.protocol === 'http:') {\n        error = new Error('NavigatorUserMediaError');\n        error.name = 'HTTPS_REQUIRED';\n        return callback(error);\n    }\n\n    if (window.navigator.userAgent.match('Chrome')) {\n        var chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n        var maxver = 33;\n        var isCef = !window.chrome.webstore;\n        // \"known\" crash in chrome 34 and 35 on linux\n        if (window.navigator.userAgent.match('Linux')) maxver = 35;\n\n        // check that the extension is installed by looking for a\n        // sessionStorage variable that contains the extension id\n        // this has to be set after installation unless the contest\n        // script does that\n        if (sessionStorage.getScreenMediaJSExtensionId) {\n            chrome.runtime.sendMessage(sessionStorage.getScreenMediaJSExtensionId,\n                {type:'getScreen', id: 1}, null,\n                function (data) {\n                    if (!data || data.sourceId === '') { // user canceled\n                        var error = new Error('NavigatorUserMediaError');\n                        error.name = 'PERMISSION_DENIED';\n                        callback(error);\n                    } else {\n                        constraints = (hasConstraints && constraints) || {audio: false, video: {\n                            mandatory: {\n                                chromeMediaSource: 'desktop',\n                                maxWidth: window.screen.width,\n                                maxHeight: window.screen.height,\n                                maxFrameRate: 3\n                            },\n                            optional: [\n                                {googLeakyBucket: true},\n                                {googTemporalLayeredScreencast: true}\n                            ]\n                        }};\n                        constraints.video.mandatory.chromeMediaSourceId = data.sourceId;\n                        getUserMedia(constraints, callback);\n                    }\n                }\n            );\n        } else if (window.cefGetScreenMedia) {\n            //window.cefGetScreenMedia is experimental - may be removed without notice\n            window.cefGetScreenMedia(function(sourceId) {\n                if (!sourceId) {\n                    var error = new Error('cefGetScreenMediaError');\n                    error.name = 'CEF_GETSCREENMEDIA_CANCELED';\n                    callback(error);\n                } else {\n                    constraints = (hasConstraints && constraints) || {audio: false, video: {\n                        mandatory: {\n                            chromeMediaSource: 'desktop',\n                            maxWidth: window.screen.width,\n                            maxHeight: window.screen.height,\n                            maxFrameRate: 3\n                        },\n                        optional: [\n                            {googLeakyBucket: true},\n                            {googTemporalLayeredScreencast: true}\n                        ]\n                    }};\n                    constraints.video.mandatory.chromeMediaSourceId = sourceId;\n                    getUserMedia(constraints, callback);\n                }\n            });\n        } else if (isCef || (chromever >= 26 && chromever <= maxver)) {\n            // chrome 26 - chrome 33 way to do it -- requires bad chrome://flags\n            // note: this is basically in maintenance mode and will go away soon\n            constraints = (hasConstraints && constraints) || {\n                video: {\n                    mandatory: {\n                        googLeakyBucket: true,\n                        maxWidth: window.screen.width,\n                        maxHeight: window.screen.height,\n                        maxFrameRate: 3,\n                        chromeMediaSource: 'screen'\n                    }\n                }\n            };\n            getUserMedia(constraints, callback);\n        } else {\n            // chrome 34+ way requiring an extension\n            var pending = window.setTimeout(function () {\n                error = new Error('NavigatorUserMediaError');\n                error.name = 'EXTENSION_UNAVAILABLE';\n                return callback(error);\n            }, 1000);\n            cache[pending] = [callback, hasConstraints ? constraints : null];\n            window.postMessage({ type: 'getScreen', id: pending }, '*');\n        }\n    } else if (window.navigator.userAgent.match('Firefox')) {\n        var ffver = parseInt(window.navigator.userAgent.match(/Firefox\\/(.*)/)[1], 10);\n        if (ffver >= 33) {\n            constraints = (hasConstraints && constraints) || {\n                video: {\n                    mozMediaSource: 'window',\n                    mediaSource: 'window'\n                }\n            }\n            getUserMedia(constraints, function (err, stream) {\n                callback(err, stream);\n                // workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n                if (!err) {\n                    var lastTime = stream.currentTime;\n                    var polly = window.setInterval(function () {\n                        if (!stream) window.clearInterval(polly);\n                        if (stream.currentTime == lastTime) {\n                            window.clearInterval(polly);\n                            if (stream.onended) {\n                                stream.onended();\n                            }\n                        }\n                        lastTime = stream.currentTime;\n                    }, 500);\n                }\n            });\n        } else {\n            error = new Error('NavigatorUserMediaError');\n            error.name = 'EXTENSION_UNAVAILABLE'; // does not make much sense but...\n        }\n    }\n};\n\nwindow.addEventListener('message', function (event) {\n    if (event.origin != window.location.origin) {\n        return;\n    }\n    if (event.data.type == 'gotScreen' && cache[event.data.id]) {\n        var data = cache[event.data.id];\n        var constraints = data[1];\n        var callback = data[0];\n        delete cache[event.data.id];\n\n        if (event.data.sourceId === '') { // user canceled\n            var error = new Error('NavigatorUserMediaError');\n            error.name = 'PERMISSION_DENIED';\n            callback(error);\n        } else {\n            constraints = constraints || {audio: false, video: {\n                mandatory: {\n                    chromeMediaSource: 'desktop',\n                    maxWidth: window.screen.width,\n                    maxHeight: window.screen.height,\n                    maxFrameRate: 3\n                },\n                optional: [\n                    {googLeakyBucket: true},\n                    {googTemporalLayeredScreencast: true}\n                ]\n            }};\n            constraints.video.mandatory.chromeMediaSourceId = event.data.sourceId;\n            getUserMedia(constraints, callback);\n        }\n    } else if (event.data.type == 'getScreenPending') {\n        window.clearTimeout(event.data.id);\n    }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/getscreenmedia/getscreenmedia.js\n ** module id = 16\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/getscreenmedia/getscreenmedia.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("var support = __webpack_require__(13);\n\n\nfunction GainController(stream) {\n    this.support = support.webAudio && support.mediaStream;\n\n    // set our starting value\n    this.gain = 1;\n\n    if (this.support) {\n        var context = this.context = new support.AudioContext();\n        this.microphone = context.createMediaStreamSource(stream);\n        this.gainFilter = context.createGain();\n        this.destination = context.createMediaStreamDestination();\n        this.outputStream = this.destination.stream;\n        this.microphone.connect(this.gainFilter);\n        this.gainFilter.connect(this.destination);\n        stream.addTrack(this.outputStream.getAudioTracks()[0]);\n        stream.removeTrack(stream.getAudioTracks()[0]);\n    }\n    this.stream = stream;\n}\n\n// setting\nGainController.prototype.setGain = function (val) {\n    // check for support\n    if (!this.support) return;\n    this.gainFilter.gain.value = val;\n    this.gain = val;\n};\n\nGainController.prototype.getGain = function () {\n    return this.gain;\n};\n\nGainController.prototype.off = function () {\n    return this.setGain(0);\n};\n\nGainController.prototype.on = function () {\n    this.setGain(1);\n};\n\n\nmodule.exports = GainController;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/localmedia/~/mediastream-gain/mediastream-gain.js\n ** module id = 17\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/localmedia/~/mediastream-gain/mediastream-gain.js?");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("var util = __webpack_require__(4);\nvar webrtc = __webpack_require__(8);\nvar PeerConnection = __webpack_require__(19);\nvar WildEmitter = __webpack_require__(9);\nvar FileTransfer = __webpack_require__(50);\n\n// the inband-v1 protocol is sending metadata inband in a serialized JSON object\n// followed by the actual data. Receiver closes the datachannel upon completion\nvar INBAND_FILETRANSFER_V1 = 'https://simplewebrtc.com/protocol/filetransfer#inband-v1';\n\nfunction Peer(options) {\n    var self = this;\n\n    // call emitter constructor\n    WildEmitter.call(this);\n\n    this.id = options.id;\n    this.parent = options.parent;\n    this.type = options.type || 'video';\n    this.oneway = options.oneway || false;\n    this.sharemyscreen = options.sharemyscreen || false;\n    this.browserPrefix = options.prefix;\n    this.stream = options.stream;\n    this.enableDataChannels = options.enableDataChannels === undefined ? this.parent.config.enableDataChannels : options.enableDataChannels;\n    this.receiveMedia = options.receiveMedia || this.parent.config.receiveMedia;\n    this.channels = {};\n    this.sid = options.sid || Date.now().toString();\n    // Create an RTCPeerConnection via the polyfill\n    this.pc = new PeerConnection(this.parent.config.peerConnectionConfig, this.parent.config.peerConnectionConstraints);\n    this.pc.on('ice', this.onIceCandidate.bind(this));\n    this.pc.on('endOfCandidates', function (event) {\n        self.send('endOfCandidates', event);\n    });\n    this.pc.on('offer', function (offer) {\n        if (self.parent.config.nick) offer.nick = self.parent.config.nick;\n        self.send('offer', offer);\n    });\n    this.pc.on('answer', function (answer) {\n        if (self.parent.config.nick) answer.nick = self.parent.config.nick;\n        self.send('answer', answer);\n    });\n    this.pc.on('addStream', this.handleRemoteStreamAdded.bind(this));\n    this.pc.on('addChannel', this.handleDataChannelAdded.bind(this));\n    this.pc.on('removeStream', this.handleStreamRemoved.bind(this));\n    // Just fire negotiation needed events for now\n    // When browser re-negotiation handling seems to work\n    // we can use this as the trigger for starting the offer/answer process\n    // automatically. We'll just leave it be for now while this stabalizes.\n    this.pc.on('negotiationNeeded', this.emit.bind(this, 'negotiationNeeded'));\n    this.pc.on('iceConnectionStateChange', this.emit.bind(this, 'iceConnectionStateChange'));\n    this.pc.on('iceConnectionStateChange', function () {\n        switch (self.pc.iceConnectionState) {\n        case 'failed':\n            // currently, in chrome only the initiator goes to failed\n            // so we need to signal this to the peer\n            if (self.pc.pc.peerconnection.localDescription.type === 'offer') {\n                self.parent.emit('iceFailed', self);\n                self.send('connectivityError');\n            }\n            break;\n        }\n    });\n    this.pc.on('signalingStateChange', this.emit.bind(this, 'signalingStateChange'));\n    this.logger = this.parent.logger;\n\n    // handle screensharing/broadcast mode\n    if (options.type === 'screen') {\n        if (this.parent.localScreen && this.sharemyscreen) {\n            this.logger.log('adding local screen stream to peer connection');\n            this.pc.addStream(this.parent.localScreen);\n            this.broadcaster = options.broadcaster;\n        }\n    } else {\n        this.parent.localStreams.forEach(function (stream) {\n            self.pc.addStream(stream);\n        });\n    }\n\n    this.on('channelOpen', function (channel) {\n        if (channel.protocol === INBAND_FILETRANSFER_V1) {\n            channel.onmessage = function (event) {\n                var metadata = JSON.parse(event.data);\n                var receiver = new FileTransfer.Receiver();\n                receiver.receive(metadata, channel);\n                self.emit('fileTransfer', metadata, receiver);\n                receiver.on('receivedFile', function (file, metadata) {\n                    receiver.channel.close();\n                });\n            };\n        }\n    });\n\n    // proxy events to parent\n    this.on('*', function () {\n        self.parent.emit.apply(self.parent, arguments);\n    });\n}\n\nutil.inherits(Peer, WildEmitter);\n\nPeer.prototype.handleMessage = function (message) {\n    var self = this;\n\n    this.logger.log('getting', message.type, message);\n\n    if (message.prefix) this.browserPrefix = message.prefix;\n\n    if (message.type === 'offer') {\n        if (!this.nick) this.nick = message.payload.nick;\n        delete message.payload.nick;\n        this.pc.handleOffer(message.payload, function (err) {\n            if (err) {\n                return;\n            }\n            // auto-accept\n            self.pc.answer(function (err, sessionDescription) {\n                //self.send('answer', sessionDescription);\n            });\n        });\n    } else if (message.type === 'answer') {\n        if (!this.nick) this.nick = message.payload.nick;\n        delete message.payload.nick;\n        this.pc.handleAnswer(message.payload);\n    } else if (message.type === 'candidate') {\n        this.pc.processIce(message.payload);\n    } else if (message.type === 'connectivityError') {\n        this.parent.emit('connectivityError', self);\n    } else if (message.type === 'mute') {\n        this.parent.emit('mute', {id: message.from, name: message.payload.name});\n    } else if (message.type === 'unmute') {\n        this.parent.emit('unmute', {id: message.from, name: message.payload.name});\n    } else if (message.type === 'endOfCandidates') {\n        // Edge requires an end-of-candidates. Since only Edge will have mLines or tracks on the\n        // shim this will only be called in Edge.\n        var mLines = this.pc.pc.peerconnection.transceivers || [];\n        mLines.forEach(function (mLine) {\n            if (mLine.iceTransport) {\n                mLine.iceTransport.addRemoteCandidate({});\n            }\n        });\n    }\n};\n\n// send via signalling channel\nPeer.prototype.send = function (messageType, payload) {\n    var message = {\n        to: this.id,\n        sid: this.sid,\n        broadcaster: this.broadcaster,\n        roomType: this.type,\n        type: messageType,\n        payload: payload,\n        prefix: webrtc.prefix\n    };\n    this.logger.log('sending', messageType, message);\n    this.parent.emit('message', message);\n};\n\n// send via data channel\n// returns true when message was sent and false if channel is not open\nPeer.prototype.sendDirectly = function (channel, messageType, payload) {\n    var message = {\n        type: messageType,\n        payload: payload\n    };\n    this.logger.log('sending via datachannel', channel, messageType, message);\n    var dc = this.getDataChannel(channel);\n    if (dc.readyState != 'open') return false;\n    dc.send(JSON.stringify(message));\n    return true;\n};\n\n// Internal method registering handlers for a data channel and emitting events on the peer\nPeer.prototype._observeDataChannel = function (channel) {\n    var self = this;\n    channel.onclose = this.emit.bind(this, 'channelClose', channel);\n    channel.onerror = this.emit.bind(this, 'channelError', channel);\n    channel.onmessage = function (event) {\n        self.emit('channelMessage', self, channel.label, JSON.parse(event.data), channel, event);\n    };\n    channel.onopen = this.emit.bind(this, 'channelOpen', channel);\n};\n\n// Fetch or create a data channel by the given name\nPeer.prototype.getDataChannel = function (name, opts) {\n    if (!webrtc.supportDataChannel) return this.emit('error', new Error('createDataChannel not supported'));\n    var channel = this.channels[name];\n    opts || (opts = {});\n    if (channel) return channel;\n    // if we don't have one by this label, create it\n    channel = this.channels[name] = this.pc.createDataChannel(name, opts);\n    this._observeDataChannel(channel);\n    return channel;\n};\n\nPeer.prototype.onIceCandidate = function (candidate) {\n    if (this.closed) return;\n    if (candidate) {\n        var pcConfig = this.parent.config.peerConnectionConfig;\n        if (webrtc.prefix === 'moz' && pcConfig && pcConfig.iceTransports &&\n                candidate.candidate && candidate.candidate.candidate &&\n                candidate.candidate.candidate.indexOf(pcConfig.iceTransports) < 0) {\n            this.logger.log('Ignoring ice candidate not matching pcConfig iceTransports type: ', pcConfig.iceTransports);\n        } else {\n            this.send('candidate', candidate);\n        }\n    } else {\n        this.logger.log(\"End of candidates.\");\n    }\n};\n\nPeer.prototype.start = function () {\n    var self = this;\n\n    // well, the webrtc api requires that we either\n    // a) create a datachannel a priori\n    // b) do a renegotiation later to add the SCTP m-line\n    // Let's do (a) first...\n    if (this.enableDataChannels) {\n        this.getDataChannel('simplewebrtc');\n    }\n\n    this.pc.offer(this.receiveMedia, function (err, sessionDescription) {\n        //self.send('offer', sessionDescription);\n    });\n};\n\nPeer.prototype.icerestart = function () {\n    var constraints = this.receiveMedia;\n    constraints.mandatory.IceRestart = true;\n    this.pc.offer(constraints, function (err, success) { });\n};\n\nPeer.prototype.end = function () {\n    if (this.closed) return;\n    this.pc.close();\n    this.handleStreamRemoved();\n};\n\nPeer.prototype.handleRemoteStreamAdded = function (event) {\n    var self = this;\n    if (this.stream) {\n        this.logger.warn('Already have a remote stream');\n    } else {\n        this.stream = event.stream;\n        // FIXME: addEventListener('ended', ...) would be nicer\n        // but does not work in firefox\n        this.stream.onended = function () {\n            self.end();\n        };\n        this.parent.emit('peerStreamAdded', this);\n    }\n};\n\nPeer.prototype.handleStreamRemoved = function () {\n    this.parent.peers.splice(this.parent.peers.indexOf(this), 1);\n    this.closed = true;\n    this.parent.emit('peerStreamRemoved', this);\n};\n\nPeer.prototype.handleDataChannelAdded = function (channel) {\n    this.channels[channel.label] = channel;\n    this._observeDataChannel(channel);\n};\n\nPeer.prototype.sendFile = function (file) {\n    var sender = new FileTransfer.Sender();\n    var dc = this.getDataChannel('filetransfer' + (new Date()).getTime(), {\n        protocol: INBAND_FILETRANSFER_V1\n    });\n    // override onopen\n    dc.onopen = function () {\n        dc.send(JSON.stringify({\n            size: file.size,\n            name: file.name\n        }));\n        sender.send(file, dc);\n    };\n    // override onclose\n    dc.onclose = function () {\n        console.log('sender received transfer');\n        sender.emit('complete');\n    };\n    return sender;\n};\n\nmodule.exports = Peer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/peer.js\n ** module id = 18\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/peer.js?");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("var util = __webpack_require__(4);\nvar each = __webpack_require__(20);\nvar pluck = __webpack_require__(28);\nvar SJJ = __webpack_require__(43);\nvar WildEmitter = __webpack_require__(9);\nvar peerconn = __webpack_require__(48);\nvar adapter = __webpack_require__(49);\n\nfunction PeerConnection(config, constraints) {\n    var self = this;\n    var item;\n    WildEmitter.call(this);\n\n    config = config || {};\n    config.iceServers = config.iceServers || [];\n\n    // make sure this only gets enabled in Google Chrome\n    // EXPERIMENTAL FLAG, might get removed without notice\n    this.enableChromeNativeSimulcast = false;\n    if (constraints && constraints.optional &&\n            adapter.webrtcDetectedBrowser === 'chrome' &&\n            navigator.appVersion.match(/Chromium\\//) === null) {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.enableChromeNativeSimulcast) {\n                self.enableChromeNativeSimulcast = true;\n            }\n        });\n    }\n\n    // EXPERIMENTAL FLAG, might get removed without notice\n    this.enableMultiStreamHacks = false;\n    if (constraints && constraints.optional &&\n            adapter.webrtcDetectedBrowser === 'chrome') {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.enableMultiStreamHacks) {\n                self.enableMultiStreamHacks = true;\n            }\n        });\n    }\n    // EXPERIMENTAL FLAG, might get removed without notice\n    this.restrictBandwidth = 0;\n    if (constraints && constraints.optional) {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.andyetRestrictBandwidth) {\n                self.restrictBandwidth = constraint.andyetRestrictBandwidth;\n            }\n        });\n    }\n\n    // EXPERIMENTAL FLAG, might get removed without notice\n    // bundle up ice candidates, only works for jingle mode\n    // number > 0 is the delay to wait for additional candidates\n    // ~20ms seems good\n    this.batchIceCandidates = 0;\n    if (constraints && constraints.optional) {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.andyetBatchIce) {\n                self.batchIceCandidates = constraint.andyetBatchIce;\n            }\n        });\n    }\n    this.batchedIceCandidates = [];\n\n    // EXPERIMENTAL FLAG, might get removed without notice\n    // this attemps to strip out candidates with an already known foundation\n    // and type -- i.e. those which are gathered via the same TURN server\n    // but different transports (TURN udp, tcp and tls respectively)\n    if (constraints && constraints.optional && adapter.webrtcDetectedBrowser === 'chrome') {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.andyetFasterICE) {\n                self.eliminateDuplicateCandidates = constraint.andyetFasterICE;\n            }\n        });\n    }\n    // EXPERIMENTAL FLAG, might get removed without notice\n    // when using a server such as the jitsi videobridge we don't need to signal\n    // our candidates\n    if (constraints && constraints.optional) {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.andyetDontSignalCandidates) {\n                self.dontSignalCandidates = constraint.andyetDontSignalCandidates;\n            }\n        });\n    }\n\n\n    // EXPERIMENTAL FLAG, might get removed without notice\n    this.assumeSetLocalSuccess = false;\n    if (constraints && constraints.optional) {\n        constraints.optional.forEach(function (constraint) {\n            if (constraint.andyetAssumeSetLocalSuccess) {\n                self.assumeSetLocalSuccess = constraint.andyetAssumeSetLocalSuccess;\n            }\n        });\n    }\n\n    // EXPERIMENTAL FLAG, might get removed without notice\n    // working around https://bugzilla.mozilla.org/show_bug.cgi?id=1087551\n    // pass in a timeout for this\n    if (adapter.webrtcDetectedBrowser === 'firefox') {\n        if (constraints && constraints.optional) {\n            this.wtFirefox = 0;\n            constraints.optional.forEach(function (constraint) {\n                if (constraint.andyetFirefoxMakesMeSad) {\n                    self.wtFirefox = constraint.andyetFirefoxMakesMeSad;\n                    if (self.wtFirefox > 0) {\n                        self.firefoxcandidatebuffer = [];\n                    }\n                }\n            });\n        }\n    }\n\n\n    this.pc = new peerconn(config, constraints);\n\n    this.getLocalStreams = this.pc.getLocalStreams.bind(this.pc);\n    this.getRemoteStreams = this.pc.getRemoteStreams.bind(this.pc);\n    this.addStream = this.pc.addStream.bind(this.pc);\n    this.removeStream = this.pc.removeStream.bind(this.pc);\n\n    // proxy events\n    this.pc.on('*', function () {\n        self.emit.apply(self, arguments);\n    });\n\n    // proxy some events directly\n    this.pc.onremovestream = this.emit.bind(this, 'removeStream');\n    this.pc.onaddstream = this.emit.bind(this, 'addStream');\n    this.pc.onnegotiationneeded = this.emit.bind(this, 'negotiationNeeded');\n    this.pc.oniceconnectionstatechange = this.emit.bind(this, 'iceConnectionStateChange');\n    this.pc.onsignalingstatechange = this.emit.bind(this, 'signalingStateChange');\n\n    // handle ice candidate and data channel events\n    this.pc.onicecandidate = this._onIce.bind(this);\n    this.pc.ondatachannel = this._onDataChannel.bind(this);\n\n    this.localDescription = {\n        contents: []\n    };\n    this.remoteDescription = {\n        contents: []\n    };\n\n    this.config = {\n        debug: false,\n        ice: {},\n        sid: '',\n        isInitiator: true,\n        sdpSessionID: Date.now(),\n        useJingle: false\n    };\n\n    // apply our config\n    for (item in config) {\n        this.config[item] = config[item];\n    }\n\n    if (this.config.debug) {\n        this.on('*', function () {\n            var logger = config.logger || console;\n            logger.log('PeerConnection event:', arguments);\n        });\n    }\n    this.hadLocalStunCandidate = false;\n    this.hadRemoteStunCandidate = false;\n    this.hadLocalRelayCandidate = false;\n    this.hadRemoteRelayCandidate = false;\n\n    this.hadLocalIPv6Candidate = false;\n    this.hadRemoteIPv6Candidate = false;\n\n    // keeping references for all our data channels\n    // so they dont get garbage collected\n    // can be removed once the following bugs have been fixed\n    // https://crbug.com/405545\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=964092\n    // to be filed for opera\n    this._remoteDataChannels = [];\n    this._localDataChannels = [];\n\n    this._candidateBuffer = [];\n}\n\nutil.inherits(PeerConnection, WildEmitter);\n\nObject.defineProperty(PeerConnection.prototype, 'signalingState', {\n    get: function () {\n        return this.pc.signalingState;\n    }\n});\nObject.defineProperty(PeerConnection.prototype, 'iceConnectionState', {\n    get: function () {\n        return this.pc.iceConnectionState;\n    }\n});\n\nPeerConnection.prototype._role = function () {\n    return this.isInitiator ? 'initiator' : 'responder';\n};\n\n// Add a stream to the peer connection object\nPeerConnection.prototype.addStream = function (stream) {\n    this.localStream = stream;\n    this.pc.addStream(stream);\n};\n\n// helper function to check if a remote candidate is a stun/relay\n// candidate or an ipv6 candidate\nPeerConnection.prototype._checkLocalCandidate = function (candidate) {\n    var cand = SJJ.toCandidateJSON(candidate);\n    if (cand.type == 'srflx') {\n        this.hadLocalStunCandidate = true;\n    } else if (cand.type == 'relay') {\n        this.hadLocalRelayCandidate = true;\n    }\n    if (cand.ip.indexOf(':') != -1) {\n        this.hadLocalIPv6Candidate = true;\n    }\n};\n\n// helper function to check if a remote candidate is a stun/relay\n// candidate or an ipv6 candidate\nPeerConnection.prototype._checkRemoteCandidate = function (candidate) {\n    var cand = SJJ.toCandidateJSON(candidate);\n    if (cand.type == 'srflx') {\n        this.hadRemoteStunCandidate = true;\n    } else if (cand.type == 'relay') {\n        this.hadRemoteRelayCandidate = true;\n    }\n    if (cand.ip.indexOf(':') != -1) {\n        this.hadRemoteIPv6Candidate = true;\n    }\n};\n\n\n// Init and add ice candidate object with correct constructor\nPeerConnection.prototype.processIce = function (update, cb) {\n    cb = cb || function () {};\n    var self = this;\n\n    // ignore any added ice candidates to avoid errors. why does the\n    // spec not do this?\n    if (this.pc.signalingState === 'closed') return cb();\n\n    if (update.contents || (update.jingle && update.jingle.contents)) {\n        var contentNames = pluck(this.remoteDescription.contents, 'name');\n        var contents = update.contents || update.jingle.contents;\n\n        contents.forEach(function (content) {\n            var transport = content.transport || {};\n            var candidates = transport.candidates || [];\n            var mline = contentNames.indexOf(content.name);\n            var mid = content.name;\n\n            candidates.forEach(\n                function (candidate) {\n                var iceCandidate = SJJ.toCandidateSDP(candidate) + '\\r\\n';\n                self.pc.addIceCandidate(\n                    new RTCIceCandidate({\n                        candidate: iceCandidate,\n                        sdpMLineIndex: mline,\n                        sdpMid: mid\n                    }), function () {\n                        // well, this success callback is pretty meaningless\n                    },\n                    function (err) {\n                        self.emit('error', err);\n                    }\n                );\n                self._checkRemoteCandidate(iceCandidate);\n            });\n        });\n    } else {\n        // working around https://code.google.com/p/webrtc/issues/detail?id=3669\n        if (update.candidate && update.candidate.candidate.indexOf('a=') !== 0) {\n            update.candidate.candidate = 'a=' + update.candidate.candidate;\n        }\n\n        if (this.wtFirefox && this.firefoxcandidatebuffer !== null) {\n            // we cant add this yet due to https://bugzilla.mozilla.org/show_bug.cgi?id=1087551\n            if (this.pc.localDescription && this.pc.localDescription.type === 'offer') {\n                this.firefoxcandidatebuffer.push(update.candidate);\n                return cb();\n            }\n        }\n\n        self.pc.addIceCandidate(\n            new RTCIceCandidate(update.candidate),\n            function () { },\n            function (err) {\n                self.emit('error', err);\n            }\n        );\n        self._checkRemoteCandidate(update.candidate.candidate);\n    }\n    cb();\n};\n\n// Generate and emit an offer with the given constraints\nPeerConnection.prototype.offer = function (constraints, cb) {\n    var self = this;\n    var hasConstraints = arguments.length === 2;\n    var mediaConstraints = hasConstraints && constraints ? constraints : {\n            mandatory: {\n                OfferToReceiveAudio: true,\n                OfferToReceiveVideo: true\n            }\n        };\n    cb = hasConstraints ? cb : constraints;\n    cb = cb || function () {};\n\n    if (this.pc.signalingState === 'closed') return cb('Already closed');\n\n    // Actually generate the offer\n    this.pc.createOffer(\n        function (offer) {\n            // does not work for jingle, but jingle.js doesn't need\n            // this hack...\n            var expandedOffer = {\n                type: 'offer',\n                sdp: offer.sdp\n            };\n            if (self.assumeSetLocalSuccess) {\n                self.emit('offer', expandedOffer);\n                cb(null, expandedOffer);\n            }\n            self._candidateBuffer = [];\n            self.pc.setLocalDescription(offer,\n                function () {\n                    var jingle;\n                    if (self.config.useJingle) {\n                        jingle = SJJ.toSessionJSON(offer.sdp, {\n                            role: self._role(),\n                            direction: 'outgoing'\n                        });\n                        jingle.sid = self.config.sid;\n                        self.localDescription = jingle;\n\n                        // Save ICE credentials\n                        each(jingle.contents, function (content) {\n                            var transport = content.transport || {};\n                            if (transport.ufrag) {\n                                self.config.ice[content.name] = {\n                                    ufrag: transport.ufrag,\n                                    pwd: transport.pwd\n                                };\n                            }\n                        });\n\n                        expandedOffer.jingle = jingle;\n                    }\n                    expandedOffer.sdp.split('\\r\\n').forEach(function (line) {\n                        if (line.indexOf('a=candidate:') === 0) {\n                            self._checkLocalCandidate(line);\n                        }\n                    });\n\n                    if (!self.assumeSetLocalSuccess) {\n                        self.emit('offer', expandedOffer);\n                        cb(null, expandedOffer);\n                    }\n                },\n                function (err) {\n                    self.emit('error', err);\n                    cb(err);\n                }\n            );\n        },\n        function (err) {\n            self.emit('error', err);\n            cb(err);\n        },\n        mediaConstraints\n    );\n};\n\n\n// Process an incoming offer so that ICE may proceed before deciding\n// to answer the request.\nPeerConnection.prototype.handleOffer = function (offer, cb) {\n    cb = cb || function () {};\n    var self = this;\n    offer.type = 'offer';\n    if (offer.jingle) {\n        if (this.enableChromeNativeSimulcast) {\n            offer.jingle.contents.forEach(function (content) {\n                if (content.name === 'video') {\n                    content.description.googConferenceFlag = true;\n                }\n            });\n        }\n        if (this.enableMultiStreamHacks) {\n            // add a mixed video stream as first stream\n            offer.jingle.contents.forEach(function (content) {\n                if (content.name === 'video') {\n                    var sources = content.description.sources || [];\n                    if (sources.length === 0 || sources[0].ssrc !== \"3735928559\") {\n                        sources.unshift({\n                            ssrc: \"3735928559\", // 0xdeadbeef\n                            parameters: [\n                                {\n                                    key: \"cname\",\n                                    value: \"deadbeef\"\n                                },\n                                {\n                                    key: \"msid\",\n                                    value: \"mixyourfecintothis please\"\n                                }\n                            ]\n                        });\n                        content.description.sources = sources;\n                    }\n                }\n            });\n        }\n        if (self.restrictBandwidth > 0) {\n            if (offer.jingle.contents.length >= 2 && offer.jingle.contents[1].name === 'video') {\n                var content = offer.jingle.contents[1];\n                var hasBw = content.description && content.description.bandwidth;\n                if (!hasBw) {\n                    offer.jingle.contents[1].description.bandwidth = { type: 'AS', bandwidth: self.restrictBandwidth.toString() };\n                    offer.sdp = SJJ.toSessionSDP(offer.jingle, {\n                        sid: self.config.sdpSessionID,\n                        role: self._role(),\n                        direction: 'outgoing'\n                    });\n                }\n            }\n        }\n        offer.sdp = SJJ.toSessionSDP(offer.jingle, {\n            sid: self.config.sdpSessionID,\n            role: self._role(),\n            direction: 'incoming'\n        });\n        self.remoteDescription = offer.jingle;\n    }\n    offer.sdp.split('\\r\\n').forEach(function (line) {\n        if (line.indexOf('a=candidate:') === 0) {\n            self._checkRemoteCandidate(line);\n        }\n    });\n    self.pc.setRemoteDescription(new RTCSessionDescription(offer),\n        function () {\n            cb();\n        },\n        cb\n    );\n};\n\n// Answer an offer with audio only\nPeerConnection.prototype.answerAudioOnly = function (cb) {\n    var mediaConstraints = {\n            mandatory: {\n                OfferToReceiveAudio: true,\n                OfferToReceiveVideo: false\n            }\n        };\n    this._answer(mediaConstraints, cb);\n};\n\n// Answer an offer without offering to recieve\nPeerConnection.prototype.answerBroadcastOnly = function (cb) {\n    var mediaConstraints = {\n            mandatory: {\n                OfferToReceiveAudio: false,\n                OfferToReceiveVideo: false\n            }\n        };\n    this._answer(mediaConstraints, cb);\n};\n\n// Answer an offer with given constraints default is audio/video\nPeerConnection.prototype.answer = function (constraints, cb) {\n    var hasConstraints = arguments.length === 2;\n    var callback = hasConstraints ? cb : constraints;\n    var mediaConstraints = hasConstraints && constraints ? constraints : {\n            mandatory: {\n                OfferToReceiveAudio: true,\n                OfferToReceiveVideo: true\n            }\n        };\n\n    this._answer(mediaConstraints, callback);\n};\n\n// Process an answer\nPeerConnection.prototype.handleAnswer = function (answer, cb) {\n    cb = cb || function () {};\n    var self = this;\n    if (answer.jingle) {\n        answer.sdp = SJJ.toSessionSDP(answer.jingle, {\n            sid: self.config.sdpSessionID,\n            role: self._role(),\n            direction: 'incoming'\n        });\n        self.remoteDescription = answer.jingle;\n    }\n    answer.sdp.split('\\r\\n').forEach(function (line) {\n        if (line.indexOf('a=candidate:') === 0) {\n            self._checkRemoteCandidate(line);\n        }\n    });\n    self.pc.setRemoteDescription(\n        new RTCSessionDescription(answer),\n        function () {\n            if (self.wtFirefox) {\n                window.setTimeout(function () {\n                    self.firefoxcandidatebuffer.forEach(function (candidate) {\n                        // add candidates later\n                        self.pc.addIceCandidate(\n                            new RTCIceCandidate(candidate),\n                            function () { },\n                            function (err) {\n                                self.emit('error', err);\n                            }\n                        );\n                        self._checkRemoteCandidate(candidate.candidate);\n                    });\n                    self.firefoxcandidatebuffer = null;\n                }, self.wtFirefox);\n            }\n            cb(null);\n        },\n        cb\n    );\n};\n\n// Close the peer connection\nPeerConnection.prototype.close = function () {\n    this.pc.close();\n\n    this._localDataChannels = [];\n    this._remoteDataChannels = [];\n\n    this.emit('close');\n};\n\n// Internal code sharing for various types of answer methods\nPeerConnection.prototype._answer = function (constraints, cb) {\n    cb = cb || function () {};\n    var self = this;\n    if (!this.pc.remoteDescription) {\n        // the old API is used, call handleOffer\n        throw new Error('remoteDescription not set');\n    }\n\n    if (this.pc.signalingState === 'closed') return cb('Already closed');\n\n    self.pc.createAnswer(\n        function (answer) {\n            var sim = [];\n            if (self.enableChromeNativeSimulcast) {\n                // native simulcast part 1: add another SSRC\n                answer.jingle = SJJ.toSessionJSON(answer.sdp, {\n                    role: self._role(),\n                    direction: 'outgoing'\n                });\n                if (answer.jingle.contents.length >= 2 && answer.jingle.contents[1].name === 'video') {\n                    var groups = answer.jingle.contents[1].description.sourceGroups || [];\n                    var hasSim = false;\n                    groups.forEach(function (group) {\n                        if (group.semantics == 'SIM') hasSim = true;\n                    });\n                    if (!hasSim &&\n                        answer.jingle.contents[1].description.sources.length) {\n                        var newssrc = JSON.parse(JSON.stringify(answer.jingle.contents[1].description.sources[0]));\n                        newssrc.ssrc = '' + Math.floor(Math.random() * 0xffffffff); // FIXME: look for conflicts\n                        answer.jingle.contents[1].description.sources.push(newssrc);\n\n                        sim.push(answer.jingle.contents[1].description.sources[0].ssrc);\n                        sim.push(newssrc.ssrc);\n                        groups.push({\n                            semantics: 'SIM',\n                            sources: sim\n                        });\n\n                        // also create an RTX one for the SIM one\n                        var rtxssrc = JSON.parse(JSON.stringify(newssrc));\n                        rtxssrc.ssrc = '' + Math.floor(Math.random() * 0xffffffff); // FIXME: look for conflicts\n                        answer.jingle.contents[1].description.sources.push(rtxssrc);\n                        groups.push({\n                            semantics: 'FID',\n                            sources: [newssrc.ssrc, rtxssrc.ssrc]\n                        });\n\n                        answer.jingle.contents[1].description.sourceGroups = groups;\n                        answer.sdp = SJJ.toSessionSDP(answer.jingle, {\n                            sid: self.config.sdpSessionID,\n                            role: self._role(),\n                            direction: 'outgoing'\n                        });\n                    }\n                }\n            }\n            var expandedAnswer = {\n                type: 'answer',\n                sdp: answer.sdp\n            };\n            if (self.assumeSetLocalSuccess) {\n                // not safe to do when doing simulcast mangling\n                self.emit('answer', expandedAnswer);\n                cb(null, expandedAnswer);\n            }\n            self._candidateBuffer = [];\n            self.pc.setLocalDescription(answer,\n                function () {\n                    if (self.config.useJingle) {\n                        var jingle = SJJ.toSessionJSON(answer.sdp, {\n                            role: self._role(),\n                            direction: 'outgoing'\n                        });\n                        jingle.sid = self.config.sid;\n                        self.localDescription = jingle;\n                        expandedAnswer.jingle = jingle;\n                    }\n                    if (self.enableChromeNativeSimulcast) {\n                        // native simulcast part 2:\n                        // signal multiple tracks to the receiver\n                        // for anything in the SIM group\n                        if (!expandedAnswer.jingle) {\n                            expandedAnswer.jingle = SJJ.toSessionJSON(answer.sdp, {\n                                role: self._role(),\n                                direction: 'outgoing'\n                            });\n                        }\n                        expandedAnswer.jingle.contents[1].description.sources.forEach(function (source, idx) {\n                            // the floor idx/2 is a hack that relies on a particular order\n                            // of groups, alternating between sim and rtx\n                            source.parameters = source.parameters.map(function (parameter) {\n                                if (parameter.key === 'msid') {\n                                    parameter.value += '-' + Math.floor(idx / 2);\n                                }\n                                return parameter;\n                            });\n                        });\n                        expandedAnswer.sdp = SJJ.toSessionSDP(expandedAnswer.jingle, {\n                            sid: self.sdpSessionID,\n                            role: self._role(),\n                            direction: 'outgoing'\n                        });\n                    }\n                    expandedAnswer.sdp.split('\\r\\n').forEach(function (line) {\n                        if (line.indexOf('a=candidate:') === 0) {\n                            self._checkLocalCandidate(line);\n                        }\n                    });\n                    if (!self.assumeSetLocalSuccess) {\n                        self.emit('answer', expandedAnswer);\n                        cb(null, expandedAnswer);\n                    }\n                },\n                function (err) {\n                    self.emit('error', err);\n                    cb(err);\n                }\n            );\n        },\n        function (err) {\n            self.emit('error', err);\n            cb(err);\n        },\n        constraints\n    );\n};\n\n// Internal method for emitting ice candidates on our peer object\nPeerConnection.prototype._onIce = function (event) {\n    var self = this;\n    if (event.candidate) {\n        if (this.dontSignalCandidates) return;\n        var ice = event.candidate;\n\n        var expandedCandidate = {\n            candidate: {\n                candidate: ice.candidate,\n                sdpMid: ice.sdpMid,\n                sdpMLineIndex: ice.sdpMLineIndex\n            }\n        };\n        this._checkLocalCandidate(ice.candidate);\n\n        var cand = SJJ.toCandidateJSON(ice.candidate);\n\n        var already;\n        var idx;\n        if (this.eliminateDuplicateCandidates && cand.type === 'relay') {\n            // drop candidates with same foundation, component\n            // take local type pref into account so we don't ignore udp\n            // ones when we know about a TCP one. unlikely but...\n            already = this._candidateBuffer.filter(\n                function (c) {\n                    return c.type === 'relay';\n                }).map(function (c) {\n                    return c.foundation + ':' + c.component;\n                }\n            );\n            idx = already.indexOf(cand.foundation + ':' + cand.component);\n            // remember: local type pref of udp is 0, tcp 1, tls 2\n            if (idx > -1 && ((cand.priority >> 24) >= (already[idx].priority >> 24))) {\n                // drop it, same foundation with higher (worse) type pref\n                return;\n            }\n        }\n        if (this.config.bundlePolicy === 'max-bundle') {\n            // drop candidates which are duplicate for audio/video/data\n            // duplicate means same host/port but different sdpMid\n            already = this._candidateBuffer.filter(\n                function (c) {\n                    return cand.type === c.type;\n                }).map(function (cand) {\n                    return cand.address + ':' + cand.port;\n                }\n            );\n            idx = already.indexOf(cand.address + ':' + cand.port);\n            if (idx > -1) return;\n        }\n        // also drop rtcp candidates since we know the peer supports RTCP-MUX\n        // this is a workaround until browsers implement this natively\n        if (this.config.rtcpMuxPolicy === 'require' && cand.component === '2') {\n            return;\n        }\n        this._candidateBuffer.push(cand);\n\n        if (self.config.useJingle) {\n            if (!ice.sdpMid) { // firefox doesn't set this\n                if (self.pc.remoteDescription && self.pc.remoteDescription.type === 'offer') {\n                    // preserve name from remote\n                    ice.sdpMid = self.remoteDescription.contents[ice.sdpMLineIndex].name;\n                } else {\n                    ice.sdpMid = self.localDescription.contents[ice.sdpMLineIndex].name;\n                }\n            }\n            if (!self.config.ice[ice.sdpMid]) {\n                var jingle = SJJ.toSessionJSON(self.pc.localDescription.sdp, {\n                    role: self._role(),\n                    direction: 'outgoing'\n                });\n                each(jingle.contents, function (content) {\n                    var transport = content.transport || {};\n                    if (transport.ufrag) {\n                        self.config.ice[content.name] = {\n                            ufrag: transport.ufrag,\n                            pwd: transport.pwd\n                        };\n                    }\n                });\n            }\n            expandedCandidate.jingle = {\n                contents: [{\n                    name: ice.sdpMid,\n                    creator: self._role(),\n                    transport: {\n                        transType: 'iceUdp',\n                        ufrag: self.config.ice[ice.sdpMid].ufrag,\n                        pwd: self.config.ice[ice.sdpMid].pwd,\n                        candidates: [\n                            cand\n                        ]\n                    }\n                }]\n            };\n            if (self.batchIceCandidates > 0) {\n                if (self.batchedIceCandidates.length === 0) {\n                    window.setTimeout(function () {\n                        var contents = {};\n                        self.batchedIceCandidates.forEach(function (content) {\n                            content = content.contents[0];\n                            if (!contents[content.name]) contents[content.name] = content;\n                            contents[content.name].transport.candidates.push(content.transport.candidates[0]);\n                        });\n                        var newCand = {\n                            jingle: {\n                                contents: []\n                            }\n                        };\n                        Object.keys(contents).forEach(function (name) {\n                            newCand.jingle.contents.push(contents[name]);\n                        });\n                        self.batchedIceCandidates = [];\n                        self.emit('ice', newCand);\n                    }, self.batchIceCandidates);\n                }\n                self.batchedIceCandidates.push(expandedCandidate.jingle);\n                return;\n            }\n\n        }\n        this.emit('ice', expandedCandidate);\n    } else {\n        this.emit('endOfCandidates');\n    }\n};\n\n// Internal method for processing a new data channel being added by the\n// other peer.\nPeerConnection.prototype._onDataChannel = function (event) {\n    // make sure we keep a reference so this doesn't get garbage collected\n    var channel = event.channel;\n    this._remoteDataChannels.push(channel);\n\n    this.emit('addChannel', channel);\n};\n\n// Create a data channel spec reference:\n// http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCDataChannelInit\nPeerConnection.prototype.createDataChannel = function (name, opts) {\n    var channel = this.pc.createDataChannel(name, opts);\n\n    // make sure we keep a reference so this doesn't get garbage collected\n    this._localDataChannels.push(channel);\n\n    return channel;\n};\n\nPeerConnection.prototype.getStats = function (cb) {\n    this.pc.getStats(null,\n        function (res) {\n            cb(null, res);\n        },\n        function (err) {\n            cb(err);\n        }\n    );\n};\n\nmodule.exports = PeerConnection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/rtcpeerconnection.js\n ** module id = 19\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/rtcpeerconnection.js?");

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayEach = __webpack_require__(21),\n    baseEach = __webpack_require__(22),\n    bindCallback = __webpack_require__(27),\n    isArray = __webpack_require__(26);\n\n/**\n * Creates a function for `_.forEach` or `_.forEachRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createForEach(arrayFunc, eachFunc) {\n  return function(collection, iteratee, thisArg) {\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee)\n      : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n  };\n}\n\n/**\n * Iterates over elements of `collection` invoking `iteratee` for each element.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection). Iteratee functions may exit iteration early\n * by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2]).forEach(function(n) {\n *   console.log(n);\n * }).value();\n * // => logs each value from left to right and returns the array\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n *   console.log(n, key);\n * });\n * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n */\nvar forEach = createForEach(arrayEach, baseEach);\n\nmodule.exports = forEach;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/index.js\n ** module id = 20\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/index.js?");

/***/ },
/* 21 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._arrayeach/index.js\n ** module id = 21\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._arrayeach/index.js?");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = __webpack_require__(23);\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseEach;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/index.js\n ** module id = 22\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/index.js?");

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.1.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = __webpack_require__(24),\n    isArguments = __webpack_require__(25),\n    isArray = __webpack_require__(26);\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/index.js\n ** module id = 23\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/index.js?");

/***/ },
/* 24 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.9.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = getNative;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/~/lodash._getnative/index.js\n ** module id = 24\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/~/lodash._getnative/index.js?");

/***/ },
/* 25 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/~/lodash.isarguments/index.js\n ** module id = 25\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._baseeach/~/lodash.keys/~/lodash.isarguments/index.js?");

/***/ },
/* 26 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash.isarray/index.js\n ** module id = 26\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash.isarray/index.js?");

/***/ },
/* 27 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._bindcallback/index.js\n ** module id = 27\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.foreach/~/lodash._bindcallback/index.js?");

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.1.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseGet = __webpack_require__(29),\n    toPath = __webpack_require__(30),\n    isArray = __webpack_require__(31),\n    map = __webpack_require__(32);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Gets the property value of `path` from all elements in `collection`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Array|string} path The path of the property to pluck.\n * @returns {Array} Returns the property values.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 }\n * ];\n *\n * _.pluck(users, 'user');\n * // => ['barney', 'fred']\n *\n * var userIndex = _.indexBy(users, 'user');\n * _.pluck(userIndex, 'age');\n * // => [36, 40] (iteration order is not guaranteed)\n */\nfunction pluck(collection, path) {\n  return map(collection, property(path));\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a function which returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = pluck;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/index.js\n ** module id = 28\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/index.js?");

/***/ },
/* 29 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.7.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseGet;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash._baseget/index.js\n ** module id = 29\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash._baseget/index.js?");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.8.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArray = __webpack_require__(31);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash._topath/index.js\n ** module id = 30\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash._topath/index.js?");

/***/ },
/* 31 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.isarray/index.js\n ** module id = 31\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.isarray/index.js?");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.1.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayMap = __webpack_require__(33),\n    baseCallback = __webpack_require__(34),\n    baseEach = __webpack_require__(42),\n    isArray = __webpack_require__(31);\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.map` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Creates an array of values by running each element in `collection` through\n * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n * `sum`, `uniq`, and `words`\n *\n * @static\n * @memberOf _\n * @alias collect\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function timesThree(n) {\n *   return n * 3;\n * }\n *\n * _.map([1, 2], timesThree);\n * // => [3, 6]\n *\n * _.map({ 'a': 1, 'b': 2 }, timesThree);\n * // => [3, 6] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // using the `_.property` callback shorthand\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee, thisArg) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  iteratee = baseCallback(iteratee, thisArg, 3);\n  return func(collection, iteratee);\n}\n\nmodule.exports = map;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/index.js\n ** module id = 32\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/index.js?");

/***/ },
/* 33 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.map` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._arraymap/index.js\n ** module id = 33\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._arraymap/index.js?");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.3.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIsEqual = __webpack_require__(35),\n    bindCallback = __webpack_require__(40),\n    isArray = __webpack_require__(31),\n    pairs = __webpack_require__(41);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = baseCallback;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/index.js\n ** module id = 34\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/index.js?");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.0.7 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArray = __webpack_require__(31),\n    isTypedArray = __webpack_require__(36),\n    keys = __webpack_require__(37);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} value The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseIsEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._baseisequal/index.js\n ** module id = 35\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._baseisequal/index.js?");

/***/ },
/* 36 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._baseisequal/~/lodash.istypedarray/index.js\n ** module id = 36\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._baseisequal/~/lodash.istypedarray/index.js?");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.1.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = __webpack_require__(38),\n    isArguments = __webpack_require__(39),\n    isArray = __webpack_require__(31);\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/index.js\n ** module id = 37\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/index.js?");

/***/ },
/* 38 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.9.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = getNative;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/~/lodash._getnative/index.js\n ** module id = 38\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/~/lodash._getnative/index.js?");

/***/ },
/* 39 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/~/lodash.isarguments/index.js\n ** module id = 39\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash.keys/~/lodash.isarguments/index.js?");

/***/ },
/* 40 */
/***/ function(module, exports) {

	eval("/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._bindcallback/index.js\n ** module id = 40\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash._bindcallback/index.js?");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = __webpack_require__(37);\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash.pairs/index.js\n ** module id = 41\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._basecallback/~/lodash.pairs/index.js?");

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar keys = __webpack_require__(37);\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseEach;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._baseeach/index.js\n ** module id = 42\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/lodash.pluck/~/lodash.map/~/lodash._baseeach/index.js?");

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	eval("var toSDP = __webpack_require__(44);\nvar toJSON = __webpack_require__(46);\n\n\n// Converstion from JSON to SDP\n\nexports.toIncomingSDPOffer = function (session) {\n    return toSDP.toSessionSDP(session, {\n        role: 'responder',\n        direction: 'incoming'\n    });\n};\nexports.toOutgoingSDPOffer = function (session) {\n    return toSDP.toSessionSDP(session, {\n        role: 'initiator',\n        direction: 'outgoing'\n    });\n};\nexports.toIncomingSDPAnswer = function (session) {\n    return toSDP.toSessionSDP(session, {\n        role: 'initiator',\n        direction: 'incoming'\n    });\n};\nexports.toOutgoingSDPAnswer = function (session) {\n    return toSDP.toSessionSDP(session, {\n        role: 'responder',\n        direction: 'outgoing'\n    });\n};\nexports.toIncomingMediaSDPOffer = function (media) {\n    return toSDP.toMediaSDP(media, {\n        role: 'responder',\n        direction: 'incoming'\n    });\n};\nexports.toOutgoingMediaSDPOffer = function (media) {\n    return toSDP.toMediaSDP(media, {\n        role: 'initiator',\n        direction: 'outgoing'\n    });\n};\nexports.toIncomingMediaSDPAnswer = function (media) {\n    return toSDP.toMediaSDP(media, {\n        role: 'initiator',\n        direction: 'incoming'\n    });\n};\nexports.toOutgoingMediaSDPAnswer = function (media) {\n    return toSDP.toMediaSDP(media, {\n        role: 'responder',\n        direction: 'outgoing'\n    });\n};\nexports.toCandidateSDP = toSDP.toCandidateSDP;\nexports.toMediaSDP = toSDP.toMediaSDP;\nexports.toSessionSDP = toSDP.toSessionSDP;\n\n\n// Conversion from SDP to JSON\n\nexports.toIncomingJSONOffer = function (sdp, creators) {\n    return toJSON.toSessionJSON(sdp, {\n        role: 'responder',\n        direction: 'incoming',\n        creators: creators\n    });\n};\nexports.toOutgoingJSONOffer = function (sdp, creators) {\n    return toJSON.toSessionJSON(sdp, {\n        role: 'initiator',\n        direction: 'outgoing',\n        creators: creators\n    });\n};\nexports.toIncomingJSONAnswer = function (sdp, creators) {\n    return toJSON.toSessionJSON(sdp, {\n        role: 'initiator',\n        direction: 'incoming',\n        creators: creators\n    });\n};\nexports.toOutgoingJSONAnswer = function (sdp, creators) {\n    return toJSON.toSessionJSON(sdp, {\n        role: 'responder',\n        direction: 'outgoing',\n        creators: creators\n    });\n};\nexports.toIncomingMediaJSONOffer = function (sdp, creator) {\n    return toJSON.toMediaJSON(sdp, {\n        role: 'responder',\n        direction: 'incoming',\n        creator: creator\n    });\n};\nexports.toOutgoingMediaJSONOffer = function (sdp, creator) {\n    return toJSON.toMediaJSON(sdp, {\n        role: 'initiator',\n        direction: 'outgoing',\n        creator: creator\n    });\n};\nexports.toIncomingMediaJSONAnswer = function (sdp, creator) {\n    return toJSON.toMediaJSON(sdp, {\n        role: 'initiator',\n        direction: 'incoming',\n        creator: creator\n    });\n};\nexports.toOutgoingMediaJSONAnswer = function (sdp, creator) {\n    return toJSON.toMediaJSON(sdp, {\n        role: 'responder',\n        direction: 'outgoing',\n        creator: creator\n    });\n};\nexports.toCandidateJSON = toJSON.toCandidateJSON;\nexports.toMediaJSON = toJSON.toMediaJSON;\nexports.toSessionJSON = toJSON.toSessionJSON;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/index.js\n ** module id = 43\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/index.js?");

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("var SENDERS = __webpack_require__(45);\n\n\nexports.toSessionSDP = function (session, opts) {\n    var role = opts.role || 'initiator';\n    var direction = opts.direction || 'outgoing';\n    var sid = opts.sid || session.sid || Date.now();\n    var time = opts.time || Date.now();\n\n    var sdp = [\n        'v=0',\n        'o=- ' + sid + ' ' + time + ' IN IP4 0.0.0.0',\n        's=-',\n        't=0 0',\n        'a=msid-semantic: WMS *'\n    ];\n\n    var groups = session.groups || [];\n    groups.forEach(function (group) {\n        sdp.push('a=group:' + group.semantics + ' ' + group.contents.join(' '));\n    });\n\n    var contents = session.contents || [];\n    contents.forEach(function (content) {\n        sdp.push(exports.toMediaSDP(content, opts));\n    });\n\n    return sdp.join('\\r\\n') + '\\r\\n';\n};\n\nexports.toMediaSDP = function (content, opts) {\n    var sdp = [];\n\n    var role = opts.role || 'initiator';\n    var direction = opts.direction || 'outgoing';\n\n    var desc = content.description;\n    var transport = content.transport;\n    var payloads = desc.payloads || [];\n    var fingerprints = (transport && transport.fingerprints) || [];\n\n    var mline = [];\n    if (desc.descType == 'datachannel') {\n        mline.push('application');\n        mline.push('1');\n        mline.push('DTLS/SCTP');\n        if (transport.sctp) {\n            transport.sctp.forEach(function (map) {\n                mline.push(map.number);\n            });\n        }\n    } else {\n        mline.push(desc.media);\n        mline.push('1');\n        if ((desc.encryption && desc.encryption.length > 0) || (fingerprints.length > 0)) {\n            mline.push('RTP/SAVPF');\n        } else {\n            mline.push('RTP/AVPF');\n        }\n        payloads.forEach(function (payload) {\n            mline.push(payload.id);\n        });\n    }\n\n\n    sdp.push('m=' + mline.join(' '));\n\n    sdp.push('c=IN IP4 0.0.0.0');\n    if (desc.bandwidth && desc.bandwidth.type && desc.bandwidth.bandwidth) {\n        sdp.push('b=' + desc.bandwidth.type + ':' + desc.bandwidth.bandwidth);\n    }\n    if (desc.descType == 'rtp') {\n        sdp.push('a=rtcp:1 IN IP4 0.0.0.0');\n    }\n\n    if (transport) {\n        if (transport.ufrag) {\n            sdp.push('a=ice-ufrag:' + transport.ufrag);\n        }\n        if (transport.pwd) {\n            sdp.push('a=ice-pwd:' + transport.pwd);\n        }\n\n        var pushedSetup = false;\n        fingerprints.forEach(function (fingerprint) {\n            sdp.push('a=fingerprint:' + fingerprint.hash + ' ' + fingerprint.value);\n            if (fingerprint.setup && !pushedSetup) {\n                sdp.push('a=setup:' + fingerprint.setup);\n            }\n        });\n\n        if (transport.sctp) {\n            transport.sctp.forEach(function (map) {\n                sdp.push('a=sctpmap:' + map.number + ' ' + map.protocol + ' ' + map.streams);\n            });\n        }\n    }\n\n    if (desc.descType == 'rtp') {\n        sdp.push('a=' + (SENDERS[role][direction][content.senders] || 'sendrecv'));\n    }\n    sdp.push('a=mid:' + content.name);\n\n    if (desc.sources && desc.sources.length) {\n        (desc.sources[0].parameters || []).forEach(function (param) {\n            if (param.key === 'msid') {\n                sdp.push('a=msid:' + param.value);\n            }\n        });\n    }\n\n    if (desc.mux) {\n        sdp.push('a=rtcp-mux');\n    }\n\n    var encryption = desc.encryption || [];\n    encryption.forEach(function (crypto) {\n        sdp.push('a=crypto:' + crypto.tag + ' ' + crypto.cipherSuite + ' ' + crypto.keyParams + (crypto.sessionParams ? ' ' + crypto.sessionParams : ''));\n    });\n    if (desc.googConferenceFlag) {\n        sdp.push('a=x-google-flag:conference');\n    }\n\n    payloads.forEach(function (payload) {\n        var rtpmap = 'a=rtpmap:' + payload.id + ' ' + payload.name + '/' + payload.clockrate;\n        if (payload.channels && payload.channels != '1') {\n            rtpmap += '/' + payload.channels;\n        }\n        sdp.push(rtpmap);\n\n        if (payload.parameters && payload.parameters.length) {\n            var fmtp = ['a=fmtp:' + payload.id];\n            var parameters = [];\n            payload.parameters.forEach(function (param) {\n                parameters.push((param.key ? param.key + '=' : '') + param.value);\n            });\n            fmtp.push(parameters.join(';'));\n            sdp.push(fmtp.join(' '));\n        }\n\n        if (payload.feedback) {\n            payload.feedback.forEach(function (fb) {\n                if (fb.type === 'trr-int') {\n                    sdp.push('a=rtcp-fb:' + payload.id + ' trr-int ' + (fb.value ? fb.value : '0'));\n                } else {\n                    sdp.push('a=rtcp-fb:' + payload.id + ' ' + fb.type + (fb.subtype ? ' ' + fb.subtype : ''));\n                }\n            });\n        }\n    });\n\n    if (desc.feedback) {\n        desc.feedback.forEach(function (fb) {\n            if (fb.type === 'trr-int') {\n                sdp.push('a=rtcp-fb:* trr-int ' + (fb.value ? fb.value : '0'));\n            } else {\n                sdp.push('a=rtcp-fb:* ' + fb.type + (fb.subtype ? ' ' + fb.subtype : ''));\n            }\n        });\n    }\n\n    var hdrExts = desc.headerExtensions || [];\n    hdrExts.forEach(function (hdr) {\n        sdp.push('a=extmap:' + hdr.id + (hdr.senders ? '/' + SENDERS[role][direction][hdr.senders] : '') + ' ' + hdr.uri);\n    });\n\n    var ssrcGroups = desc.sourceGroups || [];\n    ssrcGroups.forEach(function (ssrcGroup) {\n        sdp.push('a=ssrc-group:' + ssrcGroup.semantics + ' ' + ssrcGroup.sources.join(' '));\n    });\n\n    var ssrcs = desc.sources || [];\n    ssrcs.forEach(function (ssrc) {\n        for (var i = 0; i < ssrc.parameters.length; i++) {\n            var param = ssrc.parameters[i];\n            sdp.push('a=ssrc:' + (ssrc.ssrc || desc.ssrc) + ' ' + param.key + (param.value ? (':' + param.value) : ''));\n        }\n    });\n\n    var candidates = transport.candidates || [];\n    candidates.forEach(function (candidate) {\n        sdp.push(exports.toCandidateSDP(candidate));\n    });\n\n    return sdp.join('\\r\\n');\n};\n\nexports.toCandidateSDP = function (candidate) {\n    var sdp = [];\n\n    sdp.push(candidate.foundation);\n    sdp.push(candidate.component);\n    sdp.push(candidate.protocol.toUpperCase());\n    sdp.push(candidate.priority);\n    sdp.push(candidate.ip);\n    sdp.push(candidate.port);\n\n    var type = candidate.type;\n    sdp.push('typ');\n    sdp.push(type);\n    if (type === 'srflx' || type === 'prflx' || type === 'relay') {\n        if (candidate.relAddr && candidate.relPort) {\n            sdp.push('raddr');\n            sdp.push(candidate.relAddr);\n            sdp.push('rport');\n            sdp.push(candidate.relPort);\n        }\n    }\n    if (candidate.tcpType && candidate.protocol.toUpperCase() == 'TCP') {\n        sdp.push('tcptype');\n        sdp.push(candidate.tcpType);\n    }\n\n    sdp.push('generation');\n    sdp.push(candidate.generation || '0');\n\n    // FIXME: apparently this is wrong per spec\n    // but then, we need this when actually putting this into\n    // SDP so it's going to stay.\n    // decision needs to be revisited when browsers dont\n    // accept this any longer\n    return 'a=candidate:' + sdp.join(' ');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/tosdp.js\n ** module id = 44\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/tosdp.js?");

/***/ },
/* 45 */
/***/ function(module, exports) {

	eval("module.exports = {\n    initiator: {\n        incoming: {\n            initiator: 'recvonly',\n            responder: 'sendonly',\n            both: 'sendrecv',\n            none: 'inactive',\n            recvonly: 'initiator',\n            sendonly: 'responder',\n            sendrecv: 'both',\n            inactive: 'none'\n        },\n        outgoing: {\n            initiator: 'sendonly',\n            responder: 'recvonly',\n            both: 'sendrecv',\n            none: 'inactive',\n            recvonly: 'responder',\n            sendonly: 'initiator',\n            sendrecv: 'both',\n            inactive: 'none'\n        }\n    },\n    responder: {\n        incoming: {\n            initiator: 'sendonly',\n            responder: 'recvonly',\n            both: 'sendrecv',\n            none: 'inactive',\n            recvonly: 'responder',\n            sendonly: 'initiator',\n            sendrecv: 'both',\n            inactive: 'none'\n        },\n        outgoing: {\n            initiator: 'recvonly',\n            responder: 'sendonly',\n            both: 'sendrecv',\n            none: 'inactive',\n            recvonly: 'initiator',\n            sendonly: 'responder',\n            sendrecv: 'both',\n            inactive: 'none'\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/senders.js\n ** module id = 45\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/senders.js?");

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	eval("var SENDERS = __webpack_require__(45);\nvar parsers = __webpack_require__(47);\nvar idCounter = Math.random();\n\n\nexports._setIdCounter = function (counter) {\n    idCounter = counter;\n};\n\nexports.toSessionJSON = function (sdp, opts) {\n    var i;\n    var creators = opts.creators || [];\n    var role = opts.role || 'initiator';\n    var direction = opts.direction || 'outgoing';\n\n\n    // Divide the SDP into session and media sections.\n    var media = sdp.split('\\r\\nm=');\n    for (i = 1; i < media.length; i++) {\n        media[i] = 'm=' + media[i];\n        if (i !== media.length - 1) {\n            media[i] += '\\r\\n';\n        }\n    }\n    var session = media.shift() + '\\r\\n';\n    var sessionLines = parsers.lines(session);\n    var parsed = {};\n\n    var contents = [];\n    for (i = 0; i < media.length; i++) {\n        contents.push(exports.toMediaJSON(media[i], session, {\n            role: role,\n            direction: direction,\n            creator: creators[i] || 'initiator'\n        }));\n    }\n    parsed.contents = contents;\n\n    var groupLines = parsers.findLines('a=group:', sessionLines);\n    if (groupLines.length) {\n        parsed.groups = parsers.groups(groupLines);\n    }\n\n    return parsed;\n};\n\nexports.toMediaJSON = function (media, session, opts) {\n    var creator = opts.creator || 'initiator';\n    var role = opts.role || 'initiator';\n    var direction = opts.direction || 'outgoing';\n\n    var lines = parsers.lines(media);\n    var sessionLines = parsers.lines(session);\n    var mline = parsers.mline(lines[0]);\n\n    var content = {\n        creator: creator,\n        name: mline.media,\n        description: {\n            descType: 'rtp',\n            media: mline.media,\n            payloads: [],\n            encryption: [],\n            feedback: [],\n            headerExtensions: []\n        },\n        transport: {\n            transType: 'iceUdp',\n            candidates: [],\n            fingerprints: []\n        }\n    };\n    if (mline.media == 'application') {\n        // FIXME: the description is most likely to be independent\n        // of the SDP and should be processed by other parts of the library\n        content.description = {\n            descType: 'datachannel'\n        };\n        content.transport.sctp = [];\n    }\n    var desc = content.description;\n    var trans = content.transport;\n\n    // If we have a mid, use that for the content name instead.\n    var mid = parsers.findLine('a=mid:', lines);\n    if (mid) {\n        content.name = mid.substr(6);\n    }\n\n    if (parsers.findLine('a=sendrecv', lines, sessionLines)) {\n        content.senders = 'both';\n    } else if (parsers.findLine('a=sendonly', lines, sessionLines)) {\n        content.senders = SENDERS[role][direction].sendonly;\n    } else if (parsers.findLine('a=recvonly', lines, sessionLines)) {\n        content.senders = SENDERS[role][direction].recvonly;\n    } else if (parsers.findLine('a=inactive', lines, sessionLines)) {\n        content.senders = 'none';\n    }\n\n    if (desc.descType == 'rtp') {\n        var bandwidth = parsers.findLine('b=', lines);\n        if (bandwidth) {\n            desc.bandwidth = parsers.bandwidth(bandwidth);\n        }\n\n        var ssrc = parsers.findLine('a=ssrc:', lines);\n        if (ssrc) {\n            desc.ssrc = ssrc.substr(7).split(' ')[0];\n        }\n\n        var rtpmapLines = parsers.findLines('a=rtpmap:', lines);\n        rtpmapLines.forEach(function (line) {\n            var payload = parsers.rtpmap(line);\n            payload.parameters = [];\n            payload.feedback = [];\n\n            var fmtpLines = parsers.findLines('a=fmtp:' + payload.id, lines);\n            // There should only be one fmtp line per payload\n            fmtpLines.forEach(function (line) {\n                payload.parameters = parsers.fmtp(line);\n            });\n\n            var fbLines = parsers.findLines('a=rtcp-fb:' + payload.id, lines);\n            fbLines.forEach(function (line) {\n                payload.feedback.push(parsers.rtcpfb(line));\n            });\n\n            desc.payloads.push(payload);\n        });\n\n        var cryptoLines = parsers.findLines('a=crypto:', lines, sessionLines);\n        cryptoLines.forEach(function (line) {\n            desc.encryption.push(parsers.crypto(line));\n        });\n\n        if (parsers.findLine('a=rtcp-mux', lines)) {\n            desc.mux = true;\n        }\n\n        var fbLines = parsers.findLines('a=rtcp-fb:*', lines);\n        fbLines.forEach(function (line) {\n            desc.feedback.push(parsers.rtcpfb(line));\n        });\n\n        var extLines = parsers.findLines('a=extmap:', lines);\n        extLines.forEach(function (line) {\n            var ext = parsers.extmap(line);\n\n            ext.senders = SENDERS[role][direction][ext.senders];\n\n            desc.headerExtensions.push(ext);\n        });\n\n        var ssrcGroupLines = parsers.findLines('a=ssrc-group:', lines);\n        desc.sourceGroups = parsers.sourceGroups(ssrcGroupLines || []);\n\n        var ssrcLines = parsers.findLines('a=ssrc:', lines);\n        var sources = desc.sources = parsers.sources(ssrcLines || []);\n\n        var msidLine = parsers.findLine('a=msid:', lines);\n        if (msidLine) {\n            var msid = parsers.msid(msidLine);\n            ['msid', 'mslabel', 'label'].forEach(function (key) {\n                for (var i = 0; i < sources.length; i++) {\n                    var found = false;\n                    for (var j = 0; j < sources[i].parameters.length; j++) {\n                        if (sources[i].parameters[j].key === key) {\n                            found = true;\n                        }\n                    }\n                    if (!found) {\n                        sources[i].parameters.push({ key: key, value: msid[key] });\n                    }\n                }\n            });\n        }\n\n        if (parsers.findLine('a=x-google-flag:conference', lines, sessionLines)) {\n            desc.googConferenceFlag = true;\n        }\n    }\n\n    // transport specific attributes\n    var fingerprintLines = parsers.findLines('a=fingerprint:', lines, sessionLines);\n    var setup = parsers.findLine('a=setup:', lines, sessionLines);\n    fingerprintLines.forEach(function (line) {\n        var fp = parsers.fingerprint(line);\n        if (setup) {\n            fp.setup = setup.substr(8);\n        }\n        trans.fingerprints.push(fp);\n    });\n\n    var ufragLine = parsers.findLine('a=ice-ufrag:', lines, sessionLines);\n    var pwdLine = parsers.findLine('a=ice-pwd:', lines, sessionLines);\n    if (ufragLine && pwdLine) {\n        trans.ufrag = ufragLine.substr(12);\n        trans.pwd = pwdLine.substr(10);\n        trans.candidates = [];\n\n        var candidateLines = parsers.findLines('a=candidate:', lines, sessionLines);\n        candidateLines.forEach(function (line) {\n            trans.candidates.push(exports.toCandidateJSON(line));\n        });\n    }\n\n    if (desc.descType == 'datachannel') {\n        var sctpmapLines = parsers.findLines('a=sctpmap:', lines);\n        sctpmapLines.forEach(function (line) {\n            var sctp = parsers.sctpmap(line);\n            trans.sctp.push(sctp);\n        });\n    }\n\n    return content;\n};\n\nexports.toCandidateJSON = function (line) {\n    var candidate = parsers.candidate(line.split('\\r\\n')[0]);\n    candidate.id = (idCounter++).toString(36).substr(0, 12);\n    return candidate;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/tojson.js\n ** module id = 46\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/tojson.js?");

/***/ },
/* 47 */
/***/ function(module, exports) {

	eval("exports.lines = function (sdp) {\n    return sdp.split('\\r\\n').filter(function (line) {\n        return line.length > 0;\n    });\n};\n\nexports.findLine = function (prefix, mediaLines, sessionLines) {\n    var prefixLength = prefix.length;\n    for (var i = 0; i < mediaLines.length; i++) {\n        if (mediaLines[i].substr(0, prefixLength) === prefix) {\n            return mediaLines[i];\n        }\n    }\n    // Continue searching in parent session section\n    if (!sessionLines) {\n        return false;\n    }\n\n    for (var j = 0; j < sessionLines.length; j++) {\n        if (sessionLines[j].substr(0, prefixLength) === prefix) {\n            return sessionLines[j];\n        }\n    }\n\n    return false;\n};\n\nexports.findLines = function (prefix, mediaLines, sessionLines) {\n    var results = [];\n    var prefixLength = prefix.length;\n    for (var i = 0; i < mediaLines.length; i++) {\n        if (mediaLines[i].substr(0, prefixLength) === prefix) {\n            results.push(mediaLines[i]);\n        }\n    }\n    if (results.length || !sessionLines) {\n        return results;\n    }\n    for (var j = 0; j < sessionLines.length; j++) {\n        if (sessionLines[j].substr(0, prefixLength) === prefix) {\n            results.push(sessionLines[j]);\n        }\n    }\n    return results;\n};\n\nexports.mline = function (line) {\n    var parts = line.substr(2).split(' ');\n    var parsed = {\n        media: parts[0],\n        port: parts[1],\n        proto: parts[2],\n        formats: []\n    };\n    for (var i = 3; i < parts.length; i++) {\n        if (parts[i]) {\n            parsed.formats.push(parts[i]);\n        }\n    }\n    return parsed;\n};\n\nexports.rtpmap = function (line) {\n    var parts = line.substr(9).split(' ');\n    var parsed = {\n        id: parts.shift()\n    };\n\n    parts = parts[0].split('/');\n\n    parsed.name = parts[0];\n    parsed.clockrate = parts[1];\n    parsed.channels = parts.length == 3 ? parts[2] : '1';\n    return parsed;\n};\n\nexports.sctpmap = function (line) {\n    // based on -05 draft\n    var parts = line.substr(10).split(' ');\n    var parsed = {\n        number: parts.shift(),\n        protocol: parts.shift(),\n        streams: parts.shift()\n    };\n    return parsed;\n};\n\n\nexports.fmtp = function (line) {\n    var kv, key, value;\n    var parts = line.substr(line.indexOf(' ') + 1).split(';');\n    var parsed = [];\n    for (var i = 0; i < parts.length; i++) {\n        kv = parts[i].split('=');\n        key = kv[0].trim();\n        value = kv[1];\n        if (key && value) {\n            parsed.push({key: key, value: value});\n        } else if (key) {\n            parsed.push({key: '', value: key});\n        }\n    }\n    return parsed;\n};\n\nexports.crypto = function (line) {\n    var parts = line.substr(9).split(' ');\n    var parsed = {\n        tag: parts[0],\n        cipherSuite: parts[1],\n        keyParams: parts[2],\n        sessionParams: parts.slice(3).join(' ')\n    };\n    return parsed;\n};\n\nexports.fingerprint = function (line) {\n    var parts = line.substr(14).split(' ');\n    return {\n        hash: parts[0],\n        value: parts[1]\n    };\n};\n\nexports.extmap = function (line) {\n    var parts = line.substr(9).split(' ');\n    var parsed = {};\n\n    var idpart = parts.shift();\n    var sp = idpart.indexOf('/');\n    if (sp >= 0) {\n        parsed.id = idpart.substr(0, sp);\n        parsed.senders = idpart.substr(sp + 1);\n    } else {\n        parsed.id = idpart;\n        parsed.senders = 'sendrecv';\n    }\n\n    parsed.uri = parts.shift() || '';\n\n    return parsed;\n};\n\nexports.rtcpfb = function (line) {\n    var parts = line.substr(10).split(' ');\n    var parsed = {};\n    parsed.id = parts.shift();\n    parsed.type = parts.shift();\n    if (parsed.type === 'trr-int') {\n        parsed.value = parts.shift();\n    } else {\n        parsed.subtype = parts.shift() || '';\n    }\n    parsed.parameters = parts;\n    return parsed;\n};\n\nexports.candidate = function (line) {\n    var parts;\n    if (line.indexOf('a=candidate:') === 0) {\n        parts = line.substring(12).split(' ');\n    } else { // no a=candidate\n        parts = line.substring(10).split(' ');\n    }\n\n    var candidate = {\n        foundation: parts[0],\n        component: parts[1],\n        protocol: parts[2].toLowerCase(),\n        priority: parts[3],\n        ip: parts[4],\n        port: parts[5],\n        // skip parts[6] == 'typ'\n        type: parts[7],\n        generation: '0'\n    };\n\n    for (var i = 8; i < parts.length; i += 2) {\n        if (parts[i] === 'raddr') {\n            candidate.relAddr = parts[i + 1];\n        } else if (parts[i] === 'rport') {\n            candidate.relPort = parts[i + 1];\n        } else if (parts[i] === 'generation') {\n            candidate.generation = parts[i + 1];\n        } else if (parts[i] === 'tcptype') {\n            candidate.tcpType = parts[i + 1];\n        }\n    }\n\n    candidate.network = '1';\n\n    return candidate;\n};\n\nexports.sourceGroups = function (lines) {\n    var parsed = [];\n    for (var i = 0; i < lines.length; i++) {\n        var parts = lines[i].substr(13).split(' ');\n        parsed.push({\n            semantics: parts.shift(),\n            sources: parts\n        });\n    }\n    return parsed;\n};\n\nexports.sources = function (lines) {\n    // http://tools.ietf.org/html/rfc5576\n    var parsed = [];\n    var sources = {};\n    for (var i = 0; i < lines.length; i++) {\n        var parts = lines[i].substr(7).split(' ');\n        var ssrc = parts.shift();\n\n        if (!sources[ssrc]) {\n            var source = {\n                ssrc: ssrc,\n                parameters: []\n            };\n            parsed.push(source);\n\n            // Keep an index\n            sources[ssrc] = source;\n        }\n\n        parts = parts.join(' ').split(':');\n        var attribute = parts.shift();\n        var value = parts.join(':') || null;\n\n        sources[ssrc].parameters.push({\n            key: attribute,\n            value: value\n        });\n    }\n\n    return parsed;\n};\n\nexports.groups = function (lines) {\n    // http://tools.ietf.org/html/rfc5888\n    var parsed = [];\n    var parts;\n    for (var i = 0; i < lines.length; i++) {\n        parts = lines[i].substr(8).split(' ');\n        parsed.push({\n            semantics: parts.shift(),\n            contents: parts\n        });\n    }\n    return parsed;\n};\n\nexports.bandwidth = function (line) {\n    var parts = line.substr(2).split(':');\n    var parsed = {};\n    parsed.type = parts.shift();\n    parsed.bandwidth = parts.shift();\n    return parsed;\n};\n\nexports.msid = function (line) {\n    var data = line.substr(7);\n    var parts = data.split(' ');\n    return {\n        msid: data,\n        mslabel: parts[0],\n        label: parts[1]\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/parsers.js\n ** module id = 47\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/sdp-jingle-json/lib/parsers.js?");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	eval("// based on https://github.com/ESTOS/strophe.jingle/\n// adds wildemitter support\nvar util = __webpack_require__(4);\nvar adapter = __webpack_require__(49);\nvar WildEmitter = __webpack_require__(9);\n\nfunction dumpSDP(description) {\n    return {\n        type: description.type,\n        sdp: description.sdp\n    };\n}\n\nfunction dumpStream(stream) {\n    var info = {\n        label: stream.id,\n    };\n    if (stream.getAudioTracks().length) {\n        info.audio = stream.getAudioTracks().map(function (track) {\n            return track.id;\n        });\n    }\n    if (stream.getVideoTracks().length) {\n        info.video = stream.getVideoTracks().map(function (track) {\n            return track.id;\n        });\n    }\n    return info;\n}\n\nfunction TraceablePeerConnection(config, constraints) {\n    var self = this;\n    WildEmitter.call(this);\n\n    this.peerconnection = new window.RTCPeerConnection(config, constraints);\n\n    this.trace = function (what, info) {\n        self.emit('PeerConnectionTrace', {\n            time: new Date(),\n            type: what,\n            value: info || \"\"\n        });\n    };\n\n    this.onicecandidate = null;\n    this.peerconnection.onicecandidate = function (event) {\n        self.trace('onicecandidate', event.candidate);\n        if (self.onicecandidate !== null) {\n            self.onicecandidate(event);\n        }\n    };\n    this.onaddstream = null;\n    this.peerconnection.onaddstream = function (event) {\n        self.trace('onaddstream', dumpStream(event.stream));\n        if (self.onaddstream !== null) {\n            self.onaddstream(event);\n        }\n    };\n    this.onremovestream = null;\n    this.peerconnection.onremovestream = function (event) {\n        self.trace('onremovestream', dumpStream(event.stream));\n        if (self.onremovestream !== null) {\n            self.onremovestream(event);\n        }\n    };\n    this.onsignalingstatechange = null;\n    this.peerconnection.onsignalingstatechange = function (event) {\n        self.trace('onsignalingstatechange', self.signalingState);\n        if (self.onsignalingstatechange !== null) {\n            self.onsignalingstatechange(event);\n        }\n    };\n    this.oniceconnectionstatechange = null;\n    this.peerconnection.oniceconnectionstatechange = function (event) {\n        self.trace('oniceconnectionstatechange', self.iceConnectionState);\n        if (self.oniceconnectionstatechange !== null) {\n            self.oniceconnectionstatechange(event);\n        }\n    };\n    this.onnegotiationneeded = null;\n    this.peerconnection.onnegotiationneeded = function (event) {\n        self.trace('onnegotiationneeded');\n        if (self.onnegotiationneeded !== null) {\n            self.onnegotiationneeded(event);\n        }\n    };\n    self.ondatachannel = null;\n    this.peerconnection.ondatachannel = function (event) {\n        self.trace('ondatachannel', event);\n        if (self.ondatachannel !== null) {\n            self.ondatachannel(event);\n        }\n    };\n    this.getLocalStreams = this.peerconnection.getLocalStreams.bind(this.peerconnection);\n    this.getRemoteStreams = this.peerconnection.getRemoteStreams.bind(this.peerconnection);\n}\n\nutil.inherits(TraceablePeerConnection, WildEmitter);\n\n['signalingState', 'iceConnectionState', 'localDescription', 'remoteDescription'].forEach(function (prop) {\n    Object.defineProperty(TraceablePeerConnection.prototype, prop, {\n        get: function () {\n            return this.peerconnection[prop];\n        }\n    });\n});\n\nTraceablePeerConnection.prototype.addStream = function (stream) {\n    this.trace('addStream', dumpStream(stream));\n    this.peerconnection.addStream(stream);\n};\n\nTraceablePeerConnection.prototype.removeStream = function (stream) {\n    this.trace('removeStream', dumpStream(stream));\n    this.peerconnection.removeStream(stream);\n};\n\nTraceablePeerConnection.prototype.createDataChannel = function (label, opts) {\n    this.trace('createDataChannel', label, opts);\n    return this.peerconnection.createDataChannel(label, opts);\n};\n\nTraceablePeerConnection.prototype.setLocalDescription = function (description, successCallback, failureCallback) {\n    var self = this;\n    this.trace('setLocalDescription', dumpSDP(description));\n    this.peerconnection.setLocalDescription(description,\n        function () {\n            self.trace('setLocalDescriptionOnSuccess');\n            if (successCallback) successCallback();\n        },\n        function (err) {\n            self.trace('setLocalDescriptionOnFailure', err);\n            if (failureCallback) failureCallback(err);\n        }\n    );\n};\n\nTraceablePeerConnection.prototype.setRemoteDescription = function (description, successCallback, failureCallback) {\n    var self = this;\n    this.trace('setRemoteDescription', dumpSDP(description));\n    this.peerconnection.setRemoteDescription(description,\n        function () {\n            self.trace('setRemoteDescriptionOnSuccess');\n            if (successCallback) successCallback();\n        },\n        function (err) {\n            self.trace('setRemoteDescriptionOnFailure', err);\n            if (failureCallback) failureCallback(err);\n        }\n    );\n};\n\nTraceablePeerConnection.prototype.close = function () {\n    this.trace('stop');\n    if (this.peerconnection.signalingState != 'closed') {\n        this.peerconnection.close();\n    }\n};\n\nTraceablePeerConnection.prototype.createOffer = function (successCallback, failureCallback, constraints) {\n    var self = this;\n    this.trace('createOffer', constraints);\n    this.peerconnection.createOffer(\n        function (offer) {\n            self.trace('createOfferOnSuccess', dumpSDP(offer));\n            if (successCallback) successCallback(offer);\n        },\n        function (err) {\n            self.trace('createOfferOnFailure', err);\n            if (failureCallback) failureCallback(err);\n        },\n        constraints\n    );\n};\n\nTraceablePeerConnection.prototype.createAnswer = function (successCallback, failureCallback, constraints) {\n    var self = this;\n    this.trace('createAnswer', constraints);\n    this.peerconnection.createAnswer(\n        function (answer) {\n            self.trace('createAnswerOnSuccess', dumpSDP(answer));\n            if (successCallback) successCallback(answer);\n        },\n        function (err) {\n            self.trace('createAnswerOnFailure', err);\n            if (failureCallback) failureCallback(err);\n        },\n        constraints\n    );\n};\n\nTraceablePeerConnection.prototype.addIceCandidate = function (candidate, successCallback, failureCallback) {\n    var self = this;\n    this.trace('addIceCandidate', candidate);\n    this.peerconnection.addIceCandidate(candidate,\n        function () {\n            //self.trace('addIceCandidateOnSuccess');\n            if (successCallback) successCallback();\n        },\n        function (err) {\n            self.trace('addIceCandidateOnFailure', err);\n            if (failureCallback) failureCallback(err);\n        }\n    );\n};\n\nTraceablePeerConnection.prototype.getStats = function () {\n    this.peerconnection.getStats.apply(this.peerconnection, arguments);\n};\n\nmodule.exports = TraceablePeerConnection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/traceablepeerconnection/index.js\n ** module id = 48\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/traceablepeerconnection/index.js?");

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n/* jshint browser: true, camelcase: true, curly: true, devel: true,\n   eqeqeq: true, forin: false, globalstrict: true, node: true,\n   quotmark: single, undef: true, unused: strict */\n/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,\nmozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */\n/* exported trace,requestUserMedia */\n\n'use strict';\n\nvar getUserMedia = null;\nvar attachMediaStream = null;\nvar reattachMediaStream = null;\nvar webrtcDetectedBrowser = null;\nvar webrtcDetectedVersion = null;\nvar webrtcMinimumVersion = null;\nvar webrtcUtils = {\n  log: function() {\n    // suppress console.log output when being included as a module.\n    if (true) {\n      return;\n    }\n    console.log.apply(console, arguments);\n  },\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos]);\n  }\n};\n\nfunction trace(text) {\n  // This function is used for logging.\n  if (text[text.length - 1] === '\\n') {\n    text = text.substring(0, text.length - 1);\n  }\n  if (window.performance) {\n    var now = (window.performance.now() / 1000).toFixed(3);\n    webrtcUtils.log(now + ': ' + text);\n  } else {\n    webrtcUtils.log(text);\n  }\n}\n\nif (typeof window === 'object') {\n  if (window.HTMLMediaElement &&\n    !('srcObject' in window.HTMLMediaElement.prototype)) {\n    // Shim the srcObject property, once, when HTMLMediaElement is found.\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n      get: function() {\n        // If prefixed srcObject property exists, return it.\n        // Otherwise use the shimmed property, _srcObject\n        return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;\n      },\n      set: function(stream) {\n        if ('mozSrcObject' in this) {\n          this.mozSrcObject = stream;\n        } else {\n          // Use _srcObject as a private property for this shim\n          this._srcObject = stream;\n          // TODO: revokeObjectUrl(this.src) when !stream to release resources?\n          this.src = URL.createObjectURL(stream);\n        }\n      }\n    });\n  }\n  // Proxy existing globals\n  getUserMedia = window.navigator && window.navigator.getUserMedia;\n}\n\n// Attach a media stream to an element.\nattachMediaStream = function(element, stream) {\n  element.srcObject = stream;\n};\n\nreattachMediaStream = function(to, from) {\n  to.srcObject = from.srcObject;\n};\n\nif (typeof window === 'undefined' || !window.navigator) {\n  webrtcUtils.log('This does not appear to be a browser');\n  webrtcDetectedBrowser = 'not a browser';\n} else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Firefox');\n\n  webrtcDetectedBrowser = 'firefox';\n\n  // the detected firefox version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Firefox\\/([0-9]+)\\./, 1);\n\n  // the minimum firefox version still supported by adapter.\n  webrtcMinimumVersion = 31;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (webrtcDetectedVersion < 38) {\n      // .urls is not supported in FF < 38.\n      // create RTCIceServers with a single url.\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (server.hasOwnProperty('urls')) {\n            for (var j = 0; j < server.urls.length; j++) {\n              var newServer = {\n                url: server.urls[j]\n              };\n              if (server.urls[j].indexOf('turn') === 0) {\n                newServer.username = server.username;\n                newServer.credential = server.credential;\n              }\n              newIceServers.push(newServer);\n            }\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n    }\n    return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n  };\n\n  // The RTCSessionDescription object.\n  if (!window.RTCSessionDescription) {\n    window.RTCSessionDescription = mozRTCSessionDescription;\n  }\n\n  // The RTCIceCandidate object.\n  if (!window.RTCIceCandidate) {\n    window.RTCIceCandidate = mozRTCIceCandidate;\n  }\n\n  // getUserMedia constraints shim.\n  getUserMedia = function(constraints, onSuccess, onError) {\n    var constraintsToFF37 = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r.min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    if (webrtcDetectedVersion < 38) {\n      webrtcUtils.log('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37(constraints.video);\n      }\n      webrtcUtils.log('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, onError);\n  };\n\n  navigator.getUserMedia = getUserMedia;\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n    return new Promise(function(resolve) {\n      var infos = [\n        {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n        {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n      ];\n      resolve(infos);\n    });\n  };\n\n  if (webrtcDetectedVersion < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n} else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Chrome');\n\n  webrtcDetectedBrowser = 'chrome';\n\n  // the detected chrome version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n  // the minimum chrome version still supported by adapter.\n  webrtcMinimumVersion = 38;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    // Translate iceTransportPolicy to iceTransports,\n    // see https://code.google.com/p/webrtc/issues/detail?id=4869\n    if (pcConfig && pcConfig.iceTransportPolicy) {\n      pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n    }\n\n    var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n    var origGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, errorCallback) { // jshint ignore: line\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats(selector, successCallback);\n      }\n\n      var fixChromeStats = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper = function(response) {\n          args[1](fixChromeStats(response));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        if (args.length === 1 && selector === null) {\n          origGetStats.apply(self, [\n              function(response) {\n                resolve.apply(null, [fixChromeStats(response)]);\n              }, reject]);\n        } else {\n          origGetStats.apply(self, [resolve, reject]);\n        }\n      });\n    };\n\n    return pc;\n  };\n\n  // add promise support\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var self = this;\n      if (arguments.length < 1 || (arguments.length === 1 &&\n          typeof(arguments[0]) === 'object')) {\n        var opts = arguments.length === 1 ? arguments[0] : undefined;\n        return new Promise(function(resolve, reject) {\n          nativeMethod.apply(self, [resolve, reject, opts]);\n        });\n      } else {\n        return nativeMethod.apply(this, arguments);\n      }\n    };\n  });\n\n  ['setLocalDescription', 'setRemoteDescription',\n      'addIceCandidate'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        nativeMethod.apply(self, [args[0],\n            function() {\n              resolve();\n              if (args.length >= 2) {\n                args[1].apply(null, []);\n              }\n            },\n            function(err) {\n              reject(err);\n              if (args.length >= 3) {\n                args[2].apply(null, [err]);\n              }\n            }]\n          );\n      });\n    };\n  });\n\n  // getUserMedia constraints shim.\n  var constraintsToChrome = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  getUserMedia = function(constraints, onSuccess, onError) {\n    if (constraints.audio) {\n      constraints.audio = constraintsToChrome(constraints.audio);\n    }\n    if (constraints.video) {\n      constraints.video = constraintsToChrome(constraints.video);\n    }\n    webrtcUtils.log('chrome: ' + JSON.stringify(constraints));\n    return navigator.webkitGetUserMedia(constraints, onSuccess, onError);\n  };\n  navigator.getUserMedia = getUserMedia;\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n                              enumerateDevices: function() {\n      return new Promise(function(resolve) {\n        var kinds = {audio: 'audioinput', video: 'videoinput'};\n        return MediaStreamTrack.getSources(function(devices) {\n          resolve(devices.map(function(device) {\n            return {label: device.label,\n                    kind: kinds[device.kind],\n                    deviceId: device.id,\n                    groupId: ''};\n          }));\n        });\n      });\n    }};\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return requestUserMedia(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment\n      c.audio = constraintsToChrome(c.audio);\n      c.video = constraintsToChrome(c.video);\n      webrtcUtils.log('chrome: ' + JSON.stringify(c));\n      return origGetUserMedia(c);\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n\n  // Attach a media stream to an element.\n  attachMediaStream = function(element, stream) {\n    if (webrtcDetectedVersion >= 43) {\n      element.srcObject = stream;\n    } else if (typeof element.src !== 'undefined') {\n      element.src = URL.createObjectURL(stream);\n    } else {\n      webrtcUtils.log('Error attaching stream to element.');\n    }\n  };\n  reattachMediaStream = function(to, from) {\n    if (webrtcDetectedVersion >= 43) {\n      to.srcObject = from.srcObject;\n    } else {\n      to.src = from.src;\n    }\n  };\n\n} else if (navigator.mediaDevices && navigator.userAgent.match(\n    /Edge\\/(\\d+).(\\d+)$/)) {\n  webrtcUtils.log('This appears to be Edge');\n  webrtcDetectedBrowser = 'edge';\n\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Edge\\/(\\d+).(\\d+)$/, 2);\n\n  // the minimum version still supported by adapter.\n  webrtcMinimumVersion = 12;\n} else {\n  webrtcUtils.log('Browser does not appear to be WebRTC-capable');\n}\n\n// Returns the result of getUserMedia as a Promise.\nfunction requestUserMedia(constraints) {\n  return new Promise(function(resolve, reject) {\n    getUserMedia(constraints, resolve, reject);\n  });\n}\n\nvar webrtcTesting = {};\ntry {\n  Object.defineProperty(webrtcTesting, 'version', {\n    set: function(version) {\n      webrtcDetectedVersion = version;\n    }\n  });\n} catch (e) {}\n\nif (true) {\n  var RTCPeerConnection;\n  if (typeof window !== 'undefined') {\n    RTCPeerConnection = window.RTCPeerConnection;\n  }\n  module.exports = {\n    RTCPeerConnection: RTCPeerConnection,\n    getUserMedia: getUserMedia,\n    attachMediaStream: attachMediaStream,\n    reattachMediaStream: reattachMediaStream,\n    webrtcDetectedBrowser: webrtcDetectedBrowser,\n    webrtcDetectedVersion: webrtcDetectedVersion,\n    webrtcMinimumVersion: webrtcMinimumVersion,\n    webrtcTesting: webrtcTesting,\n    webrtcUtils: webrtcUtils\n    //requestUserMedia: not exposed on purpose.\n    //trace: not exposed on purpose.\n  };\n} else if ((typeof require === 'function') && (typeof define === 'function')) {\n  // Expose objects and functions when RequireJS is doing the loading.\n  define([], function() {\n    return {\n      RTCPeerConnection: window.RTCPeerConnection,\n      getUserMedia: getUserMedia,\n      attachMediaStream: attachMediaStream,\n      reattachMediaStream: reattachMediaStream,\n      webrtcDetectedBrowser: webrtcDetectedBrowser,\n      webrtcDetectedVersion: webrtcDetectedVersion,\n      webrtcMinimumVersion: webrtcMinimumVersion,\n      webrtcTesting: webrtcTesting,\n      webrtcUtils: webrtcUtils\n      //requestUserMedia: not exposed on purpose.\n      //trace: not exposed on purpose.\n    };\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/rtcpeerconnection/~/webrtc-adapter-test/adapter.js\n ** module id = 49\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/rtcpeerconnection/~/webrtc-adapter-test/adapter.js?");

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	eval("var WildEmitter = __webpack_require__(9);\nvar util = __webpack_require__(4);\n\nfunction Sender(opts) {\n    WildEmitter.call(this);\n    var options = opts || {};\n    this.config = {\n        chunksize: 16384,\n        pacing: 0\n    };\n    // set our config from options\n    var item;\n    for (item in options) {\n        this.config[item] = options[item];\n    }\n\n    this.file = null;\n    this.channel = null;\n}\nutil.inherits(Sender, WildEmitter);\n\nSender.prototype.send = function (file, channel) {\n    var self = this;\n    this.file = file;\n    this.channel = channel;\n    var sliceFile = function(offset) {\n        var reader = new window.FileReader();\n        reader.onload = (function() {\n            return function(e) {\n                self.channel.send(e.target.result);\n                self.emit('progress', offset, file.size, e.target.result);\n                if (file.size > offset + e.target.result.byteLength) {\n                    window.setTimeout(sliceFile, self.config.pacing, offset + self.config.chunksize);\n                } else {\n                    self.emit('progress', file.size, file.size, null);\n                    self.emit('sentFile');\n                }\n            };\n        })(file);\n        var slice = file.slice(offset, offset + self.config.chunksize);\n        reader.readAsArrayBuffer(slice);\n    };\n    window.setTimeout(sliceFile, 0, 0);\n};\n\nfunction Receiver() {\n    WildEmitter.call(this);\n\n    this.receiveBuffer = [];\n    this.received = 0;\n    this.metadata = {};\n    this.channel = null;\n}\nutil.inherits(Receiver, WildEmitter);\n\nReceiver.prototype.receive = function (metadata, channel) {\n    var self = this;\n\n    if (metadata) {\n        this.metadata = metadata;\n    }\n    this.channel = channel;\n    // chrome only supports arraybuffers and those make it easier to calc the hash\n    channel.binaryType = 'arraybuffer';\n    this.channel.onmessage = function (event) {\n        var len = event.data.byteLength;\n        self.received += len;\n        self.receiveBuffer.push(event.data);\n\n        self.emit('progress', self.received, self.metadata.size, event.data);\n        if (self.received === self.metadata.size) {\n            self.emit('receivedFile', new window.Blob(self.receiveBuffer), self.metadata);\n            self.receiveBuffer = []; // discard receivebuffer\n        } else if (self.received > self.metadata.size) {\n            // FIXME\n            console.error('received more than expected, discarding...');\n            self.receiveBuffer = []; // just discard...\n\n        }\n    };\n};\n\nmodule.exports = {};\nmodule.exports.support = typeof window !== 'undefined' && window && window.File && window.FileReader && window.Blob;\nmodule.exports.Sender = Sender;\nmodule.exports.Receiver = Receiver;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/filetransfer/filetransfer.js\n ** module id = 50\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/filetransfer/filetransfer.js?");

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	eval("var adapter = __webpack_require__(52);\nmodule.exports = function (stream, el, options) {\n    var item;\n    var URL = window.URL;\n    var element = el;\n    var opts = {\n        autoplay: true,\n        mirror: false,\n        muted: false,\n        audio: false,\n        disableContextMenu: false\n    };\n\n    if (options) {\n        for (item in options) {\n            opts[item] = options[item];\n        }\n    }\n\n    if (!element) {\n        element = document.createElement(opts.audio ? 'audio' : 'video');\n    } else if (element.tagName.toLowerCase() === 'audio') {\n        opts.audio = true;\n    }\n\n    if (opts.disableContextMenu) {\n        element.oncontextmenu = function (e) {\n            e.preventDefault();\n        };\n    }\n\n    if (opts.autoplay) element.autoplay = 'autoplay';\n    if (opts.muted) element.muted = true;\n    if (!opts.audio && opts.mirror) {\n        ['', 'moz', 'webkit', 'o', 'ms'].forEach(function (prefix) {\n            var styleName = prefix ? prefix + 'Transform' : 'transform';\n            element.style[styleName] = 'scaleX(-1)';\n        });\n    }\n\n    adapter.attachMediaStream(element, stream);\n    return element;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/attachmediastream/attachmediastream.js\n ** module id = 51\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/attachmediastream/attachmediastream.js?");

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n/* jshint browser: true, camelcase: true, curly: true, devel: true,\n   eqeqeq: true, forin: false, globalstrict: true, node: true,\n   quotmark: single, undef: true, unused: strict */\n/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,\nmozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */\n/* exported trace,requestUserMedia */\n\n'use strict';\n\nvar getUserMedia = null;\nvar attachMediaStream = null;\nvar reattachMediaStream = null;\nvar webrtcDetectedBrowser = null;\nvar webrtcDetectedVersion = null;\nvar webrtcMinimumVersion = null;\nvar webrtcUtils = {\n  log: function() {\n    // suppress console.log output when being included as a module.\n    if (true) {\n      return;\n    }\n    console.log.apply(console, arguments);\n  },\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos]);\n  }\n};\n\nfunction trace(text) {\n  // This function is used for logging.\n  if (text[text.length - 1] === '\\n') {\n    text = text.substring(0, text.length - 1);\n  }\n  if (window.performance) {\n    var now = (window.performance.now() / 1000).toFixed(3);\n    webrtcUtils.log(now + ': ' + text);\n  } else {\n    webrtcUtils.log(text);\n  }\n}\n\nif (typeof window === 'object') {\n  if (window.HTMLMediaElement &&\n    !('srcObject' in window.HTMLMediaElement.prototype)) {\n    // Shim the srcObject property, once, when HTMLMediaElement is found.\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n      get: function() {\n        // If prefixed srcObject property exists, return it.\n        // Otherwise use the shimmed property, _srcObject\n        return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;\n      },\n      set: function(stream) {\n        if ('mozSrcObject' in this) {\n          this.mozSrcObject = stream;\n        } else {\n          // Use _srcObject as a private property for this shim\n          this._srcObject = stream;\n          // TODO: revokeObjectUrl(this.src) when !stream to release resources?\n          this.src = URL.createObjectURL(stream);\n        }\n      }\n    });\n  }\n  // Proxy existing globals\n  getUserMedia = window.navigator && window.navigator.getUserMedia;\n}\n\n// Attach a media stream to an element.\nattachMediaStream = function(element, stream) {\n  element.srcObject = stream;\n};\n\nreattachMediaStream = function(to, from) {\n  to.srcObject = from.srcObject;\n};\n\nif (typeof window === 'undefined' || !window.navigator) {\n  webrtcUtils.log('This does not appear to be a browser');\n  webrtcDetectedBrowser = 'not a browser';\n} else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Firefox');\n\n  webrtcDetectedBrowser = 'firefox';\n\n  // the detected firefox version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Firefox\\/([0-9]+)\\./, 1);\n\n  // the minimum firefox version still supported by adapter.\n  webrtcMinimumVersion = 31;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (webrtcDetectedVersion < 38) {\n      // .urls is not supported in FF < 38.\n      // create RTCIceServers with a single url.\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (server.hasOwnProperty('urls')) {\n            for (var j = 0; j < server.urls.length; j++) {\n              var newServer = {\n                url: server.urls[j]\n              };\n              if (server.urls[j].indexOf('turn') === 0) {\n                newServer.username = server.username;\n                newServer.credential = server.credential;\n              }\n              newIceServers.push(newServer);\n            }\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n    }\n    return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n  };\n\n  // The RTCSessionDescription object.\n  if (!window.RTCSessionDescription) {\n    window.RTCSessionDescription = mozRTCSessionDescription;\n  }\n\n  // The RTCIceCandidate object.\n  if (!window.RTCIceCandidate) {\n    window.RTCIceCandidate = mozRTCIceCandidate;\n  }\n\n  // getUserMedia constraints shim.\n  getUserMedia = function(constraints, onSuccess, onError) {\n    var constraintsToFF37 = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r.min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    if (webrtcDetectedVersion < 38) {\n      webrtcUtils.log('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37(constraints.video);\n      }\n      webrtcUtils.log('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, onError);\n  };\n\n  navigator.getUserMedia = getUserMedia;\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n    return new Promise(function(resolve) {\n      var infos = [\n        {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n        {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n      ];\n      resolve(infos);\n    });\n  };\n\n  if (webrtcDetectedVersion < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n} else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {\n  webrtcUtils.log('This appears to be Chrome');\n\n  webrtcDetectedBrowser = 'chrome';\n\n  // the detected chrome version.\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n  // the minimum chrome version still supported by adapter.\n  webrtcMinimumVersion = 38;\n\n  // The RTCPeerConnection object.\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    // Translate iceTransportPolicy to iceTransports,\n    // see https://code.google.com/p/webrtc/issues/detail?id=4869\n    if (pcConfig && pcConfig.iceTransportPolicy) {\n      pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n    }\n\n    var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n    var origGetStats = pc.getStats.bind(pc);\n    pc.getStats = function(selector, successCallback, errorCallback) { // jshint ignore: line\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats(selector, successCallback);\n      }\n\n      var fixChromeStats = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper = function(response) {\n          args[1](fixChromeStats(response));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        if (args.length === 1 && selector === null) {\n          origGetStats.apply(self, [\n              function(response) {\n                resolve.apply(null, [fixChromeStats(response)]);\n              }, reject]);\n        } else {\n          origGetStats.apply(self, [resolve, reject]);\n        }\n      });\n    };\n\n    return pc;\n  };\n\n  // add promise support\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var self = this;\n      if (arguments.length < 1 || (arguments.length === 1 &&\n          typeof(arguments[0]) === 'object')) {\n        var opts = arguments.length === 1 ? arguments[0] : undefined;\n        return new Promise(function(resolve, reject) {\n          nativeMethod.apply(self, [resolve, reject, opts]);\n        });\n      } else {\n        return nativeMethod.apply(this, arguments);\n      }\n    };\n  });\n\n  ['setLocalDescription', 'setRemoteDescription',\n      'addIceCandidate'].forEach(function(method) {\n    var nativeMethod = webkitRTCPeerConnection.prototype[method];\n    webkitRTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        nativeMethod.apply(self, [args[0],\n            function() {\n              resolve();\n              if (args.length >= 2) {\n                args[1].apply(null, []);\n              }\n            },\n            function(err) {\n              reject(err);\n              if (args.length >= 3) {\n                args[2].apply(null, [err]);\n              }\n            }]\n          );\n      });\n    };\n  });\n\n  // getUserMedia constraints shim.\n  var constraintsToChrome = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  getUserMedia = function(constraints, onSuccess, onError) {\n    if (constraints.audio) {\n      constraints.audio = constraintsToChrome(constraints.audio);\n    }\n    if (constraints.video) {\n      constraints.video = constraintsToChrome(constraints.video);\n    }\n    webrtcUtils.log('chrome: ' + JSON.stringify(constraints));\n    return navigator.webkitGetUserMedia(constraints, onSuccess, onError);\n  };\n  navigator.getUserMedia = getUserMedia;\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: requestUserMedia,\n                              enumerateDevices: function() {\n      return new Promise(function(resolve) {\n        var kinds = {audio: 'audioinput', video: 'videoinput'};\n        return MediaStreamTrack.getSources(function(devices) {\n          resolve(devices.map(function(device) {\n            return {label: device.label,\n                    kind: kinds[device.kind],\n                    deviceId: device.id,\n                    groupId: ''};\n          }));\n        });\n      });\n    }};\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return requestUserMedia(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment\n      c.audio = constraintsToChrome(c.audio);\n      c.video = constraintsToChrome(c.video);\n      webrtcUtils.log('chrome: ' + JSON.stringify(c));\n      return origGetUserMedia(c);\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n\n  // Attach a media stream to an element.\n  attachMediaStream = function(element, stream) {\n    if (webrtcDetectedVersion >= 43) {\n      element.srcObject = stream;\n    } else if (typeof element.src !== 'undefined') {\n      element.src = URL.createObjectURL(stream);\n    } else {\n      webrtcUtils.log('Error attaching stream to element.');\n    }\n  };\n  reattachMediaStream = function(to, from) {\n    if (webrtcDetectedVersion >= 43) {\n      to.srcObject = from.srcObject;\n    } else {\n      to.src = from.src;\n    }\n  };\n\n} else if (navigator.mediaDevices && navigator.userAgent.match(\n    /Edge\\/(\\d+).(\\d+)$/)) {\n  webrtcUtils.log('This appears to be Edge');\n  webrtcDetectedBrowser = 'edge';\n\n  webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n      /Edge\\/(\\d+).(\\d+)$/, 2);\n\n  // the minimum version still supported by adapter.\n  webrtcMinimumVersion = 12;\n} else {\n  webrtcUtils.log('Browser does not appear to be WebRTC-capable');\n}\n\n// Returns the result of getUserMedia as a Promise.\nfunction requestUserMedia(constraints) {\n  return new Promise(function(resolve, reject) {\n    getUserMedia(constraints, resolve, reject);\n  });\n}\n\nvar webrtcTesting = {};\ntry {\n  Object.defineProperty(webrtcTesting, 'version', {\n    set: function(version) {\n      webrtcDetectedVersion = version;\n    }\n  });\n} catch (e) {}\n\nif (true) {\n  var RTCPeerConnection;\n  if (typeof window !== 'undefined') {\n    RTCPeerConnection = window.RTCPeerConnection;\n  }\n  module.exports = {\n    RTCPeerConnection: RTCPeerConnection,\n    getUserMedia: getUserMedia,\n    attachMediaStream: attachMediaStream,\n    reattachMediaStream: reattachMediaStream,\n    webrtcDetectedBrowser: webrtcDetectedBrowser,\n    webrtcDetectedVersion: webrtcDetectedVersion,\n    webrtcMinimumVersion: webrtcMinimumVersion,\n    webrtcTesting: webrtcTesting,\n    webrtcUtils: webrtcUtils\n    //requestUserMedia: not exposed on purpose.\n    //trace: not exposed on purpose.\n  };\n} else if ((typeof require === 'function') && (typeof define === 'function')) {\n  // Expose objects and functions when RequireJS is doing the loading.\n  define([], function() {\n    return {\n      RTCPeerConnection: window.RTCPeerConnection,\n      getUserMedia: getUserMedia,\n      attachMediaStream: attachMediaStream,\n      reattachMediaStream: reattachMediaStream,\n      webrtcDetectedBrowser: webrtcDetectedBrowser,\n      webrtcDetectedVersion: webrtcDetectedVersion,\n      webrtcMinimumVersion: webrtcMinimumVersion,\n      webrtcTesting: webrtcTesting,\n      webrtcUtils: webrtcUtils\n      //requestUserMedia: not exposed on purpose.\n      //trace: not exposed on purpose.\n    };\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/attachmediastream/~/webrtc-adapter-test/adapter.js\n ** module id = 52\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/attachmediastream/~/webrtc-adapter-test/adapter.js?");

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	eval("var io = __webpack_require__(54);\n\nfunction SocketIoConnection(config) {\n    this.connection = io.connect(config.url, config.socketio);\n}\n\nSocketIoConnection.prototype.on = function (ev, fn) {\n    this.connection.on(ev, fn);\n};\n\nSocketIoConnection.prototype.emit = function () {\n    this.connection.emit.apply(this.connection, arguments);\n};\n\nSocketIoConnection.prototype.getSessionid = function () {\n    return this.connection.id;\n};\n\nSocketIoConnection.prototype.disconnect = function () {\n    return this.connection.disconnect();\n};\n\nmodule.exports = SocketIoConnection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/socketioconnection.js\n ** module id = 53\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/socketioconnection.js?");

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nmodule.exports = __webpack_require__(55);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/index.js\n ** module id = 54\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/index.js?");

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(56);\nvar parser = __webpack_require__(59);\nvar Manager = __webpack_require__(66);\nvar debug = __webpack_require__(58)('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var io;\n\n  if (opts.forceNew || opts['force new connection'] || false === opts.multiplex) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = __webpack_require__(66);\nexports.Socket = __webpack_require__(98);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/lib/index.js\n ** module id = 55\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/lib/index.js?");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module dependencies.\n */\n\nvar parseuri = __webpack_require__(57);\nvar debug = __webpack_require__(58)('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.hostname + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  // define unique id\n  obj.id = obj.protocol + '://' + obj.host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + obj.host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/lib/url.js\n ** module id = 56\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/lib/url.js?");

/***/ },
/* 57 */
/***/ function(module, exports) {

	eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host'\n  , 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n  var m = re.exec(str || '')\n    , uri = {}\n    , i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  return uri;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/parseuri/index.js\n ** module id = 57\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/parseuri/index.js?");

/***/ },
/* 58 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/debug/debug.js\n ** module id = 58\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/debug/debug.js?");

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar debug = __webpack_require__(58)('socket.io-parser');\nvar json = __webpack_require__(60);\nvar isArray = __webpack_require__(62);\nvar Emitter = __webpack_require__(63);\nvar binary = __webpack_require__(64);\nvar isBuf = __webpack_require__(65);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/index.js\n ** module id = 59\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/index.js?");

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */\n;(function (window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = \"function\" === \"function\" && __webpack_require__(61);\n\n  // Detect native implementations.\n  var nativeJSON = typeof JSON == \"object\" && JSON;\n\n  // Set up the JSON 3 namespace, preferring the CommonJS `exports` object if\n  // available.\n  var JSON3 = typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n  if (JSON3 && nativeJSON) {\n    // Explicitly delegate to the native `stringify` and `parse`\n    // implementations in CommonJS environments.\n    JSON3.stringify = nativeJSON.stringify;\n    JSON3.parse = nativeJSON.parse;\n  } else {\n    // Export for web browsers, JavaScript engines, and asynchronous module\n    // loaders, using the global `JSON` object if available.\n    JSON3 = window.JSON = nativeJSON || {};\n  }\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // Internal: Determines whether the native `JSON.stringify` and `parse`\n  // implementations are spec-compliant. Based on work by Ken Snyder.\n  function has(name) {\n    if (has[name] !== undef) {\n      // Return cached feature test result.\n      return has[name];\n    }\n\n    var isSupported;\n    if (name == \"bug-string-char-index\") {\n      // IE <= 7 doesn't support accessing string characters using square\n      // bracket notation. IE 8 only supports this for primitives.\n      isSupported = \"a\"[0] != \"a\";\n    } else if (name == \"json\") {\n      // Indicates whether both `JSON.stringify` and `JSON.parse` are\n      // supported.\n      isSupported = has(\"json-stringify\") && has(\"json-parse\");\n    } else {\n      var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n      // Test `JSON.stringify`.\n      if (name == \"json-stringify\") {\n        var stringify = JSON3.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n        if (stringifySupported) {\n          // A test function object with a custom `toJSON` method.\n          (value = function () {\n            return 1;\n          }).toJSON = value;\n          try {\n            stringifySupported =\n              // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" &&\n              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" &&\n              stringify(new String()) == '\"\"' &&\n              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef &&\n              // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef &&\n              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef &&\n              // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" &&\n              stringify([value]) == \"[1]\" &&\n              // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" &&\n              // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" &&\n              // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" &&\n              stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          } catch (exception) {\n            stringifySupported = false;\n          }\n        }\n        isSupported = stringifySupported;\n      }\n      // Test `JSON.parse`.\n      if (name == \"json-parse\") {\n        var parse = JSON3.parse;\n        if (typeof parse == \"function\") {\n          try {\n            // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n            // Conforming implementations should also coerce the initial argument to\n            // a string prior to parsing.\n            if (parse(\"0\") === 0 && !parse(false)) {\n              // Simple parsing test.\n              value = parse(serialized);\n              var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n              if (parseSupported) {\n                try {\n                  // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                  parseSupported = !parse('\"\\t\"');\n                } catch (exception) {}\n                if (parseSupported) {\n                  try {\n                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                    // certain octal literals.\n                    parseSupported = parse(\"01\") !== 1;\n                  } catch (exception) {}\n                }\n                if (parseSupported) {\n                  try {\n                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                    // points. These environments, along with FF 3.1b1 and 2,\n                    // also allow trailing commas in JSON objects and arrays.\n                    parseSupported = parse(\"1.\") !== 1;\n                  } catch (exception) {}\n                }\n              }\n            }\n          } catch (exception) {\n            parseSupported = false;\n          }\n        }\n        isSupported = parseSupported;\n      }\n    }\n    return has[name] = !!isSupported;\n  }\n\n  if (!has(\"json\")) {\n    // Common `[[Class]]` name aliases.\n    var functionClass = \"[object Function]\";\n    var dateClass = \"[object Date]\";\n    var numberClass = \"[object Number]\";\n    var stringClass = \"[object String]\";\n    var arrayClass = \"[object Array]\";\n    var booleanClass = \"[object Boolean]\";\n\n    // Detect incomplete support for accessing string characters by index.\n    var charIndexBuggy = has(\"bug-string-char-index\");\n\n    // Define additional utility methods if the `Date` methods are buggy.\n    if (!isExtended) {\n      var floor = Math.floor;\n      // A mapping between the months of the year and the number of days between\n      // January 1st and the first of the respective month.\n      var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      // Internal: Calculates the number of days between the Unix epoch and the\n      // first day of the given month.\n      var getDay = function (year, month) {\n        return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n      };\n    }\n\n    // Internal: Determines if a property is a direct property of the given\n    // object. Delegates to the native `Object#hasOwnProperty` method.\n    if (!(isProperty = {}.hasOwnProperty)) {\n      isProperty = function (property) {\n        var members = {}, constructor;\n        if ((members.__proto__ = null, members.__proto__ = {\n          // The *proto* property cannot be set multiple times in recent\n          // versions of Firefox and SeaMonkey.\n          \"toString\": 1\n        }, members).toString != getClass) {\n          // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n          // supports the mutable *proto* property.\n          isProperty = function (property) {\n            // Capture and break the object's prototype chain (see section 8.6.2\n            // of the ES 5.1 spec). The parenthesized expression prevents an\n            // unsafe transformation by the Closure Compiler.\n            var original = this.__proto__, result = property in (this.__proto__ = null, this);\n            // Restore the original prototype chain.\n            this.__proto__ = original;\n            return result;\n          };\n        } else {\n          // Capture a reference to the top-level `Object` constructor.\n          constructor = members.constructor;\n          // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n          // other environments.\n          isProperty = function (property) {\n            var parent = (this.constructor || constructor).prototype;\n            return property in this && !(property in parent && this[property] === parent[property]);\n          };\n        }\n        members = null;\n        return isProperty.call(this, property);\n      };\n    }\n\n    // Internal: A set of primitive types used by `isHostType`.\n    var PrimitiveTypes = {\n      'boolean': 1,\n      'number': 1,\n      'string': 1,\n      'undefined': 1\n    };\n\n    // Internal: Determines if the given object `property` value is a\n    // non-primitive.\n    var isHostType = function (object, property) {\n      var type = typeof object[property];\n      return type == 'object' ? !!object[property] : !PrimitiveTypes[type];\n    };\n\n    // Internal: Normalizes the `for...in` iteration algorithm across\n    // environments. Each enumerated key is yielded to a `callback` function.\n    forEach = function (object, callback) {\n      var size = 0, Properties, members, property;\n\n      // Tests for bugs in the current environment's `for...in` algorithm. The\n      // `valueOf` property inherits the non-enumerable flag from\n      // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n      (Properties = function () {\n        this.valueOf = 0;\n      }).prototype.valueOf = 0;\n\n      // Iterate over a new instance of the `Properties` class.\n      members = new Properties();\n      for (property in members) {\n        // Ignore all properties inherited from `Object.prototype`.\n        if (isProperty.call(members, property)) {\n          size++;\n        }\n      }\n      Properties = members = null;\n\n      // Normalize the iteration algorithm.\n      if (!size) {\n        // A list of non-enumerable properties inherited from `Object.prototype`.\n        members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n        // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n        // properties.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, length;\n          var hasProperty = !isFunction && typeof object.constructor != 'function' && isHostType(object, 'hasOwnProperty') ? object.hasOwnProperty : isProperty;\n          for (property in object) {\n            // Gecko <= 1.0 enumerates the `prototype` property of functions under\n            // certain conditions; IE does not.\n            if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for each non-enumerable property.\n          for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n        };\n      } else if (size == 2) {\n        // Safari <= 2.0.4 enumerates shadowed properties twice.\n        forEach = function (object, callback) {\n          // Create a set of iterated properties.\n          var members = {}, isFunction = getClass.call(object) == functionClass, property;\n          for (property in object) {\n            // Store each property name to prevent double enumeration. The\n            // `prototype` property of functions is not enumerated due to cross-\n            // environment inconsistencies.\n            if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n        };\n      } else {\n        // No bugs detected; use the standard `for...in` algorithm.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n          for (property in object) {\n            if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for the `constructor` property due to\n          // cross-environment inconsistencies.\n          if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n            callback(property);\n          }\n        };\n      }\n      return forEach(object, callback);\n    };\n\n    // Public: Serializes a JavaScript `value` as a JSON string. The optional\n    // `filter` argument may specify either a function that alters how object and\n    // array members are serialized, or an array of strings and numbers that\n    // indicates which properties should be serialized. The optional `width`\n    // argument may be either a string or number that specifies the indentation\n    // level of the output.\n    if (!has(\"json-stringify\")) {\n      // Internal: A map of control characters and their escaped equivalents.\n      var Escapes = {\n        92: \"\\\\\\\\\",\n        34: '\\\\\"',\n        8: \"\\\\b\",\n        12: \"\\\\f\",\n        10: \"\\\\n\",\n        13: \"\\\\r\",\n        9: \"\\\\t\"\n      };\n\n      // Internal: Converts `value` into a zero-padded string such that its\n      // length is at least equal to `width`. The `width` must be <= 6.\n      var leadingZeroes = \"000000\";\n      var toPaddedString = function (width, value) {\n        // The `|| 0` expression is necessary to work around a bug in\n        // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n        return (leadingZeroes + (value || 0)).slice(-width);\n      };\n\n      // Internal: Double-quotes a string `value`, replacing all ASCII control\n      // characters (characters with code unit values between 0 and 31) with\n      // their escaped equivalents. This is an implementation of the\n      // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n      var unicodePrefix = \"\\\\u00\";\n      var quote = function (value) {\n        var result = '\"', index = 0, length = value.length, isLarge = length > 10 && charIndexBuggy, symbols;\n        if (isLarge) {\n          symbols = value.split(\"\");\n        }\n        for (; index < length; index++) {\n          var charCode = value.charCodeAt(index);\n          // If the character is a control character, append its Unicode or\n          // shorthand escape sequence; otherwise, append the character as-is.\n          switch (charCode) {\n            case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n              result += Escapes[charCode];\n              break;\n            default:\n              if (charCode < 32) {\n                result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                break;\n              }\n              result += isLarge ? symbols[index] : charIndexBuggy ? value.charAt(index) : value[index];\n          }\n        }\n        return result + '\"';\n      };\n\n      // Internal: Recursively serializes an object. Implements the\n      // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n      var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n        var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n        try {\n          // Necessary for host object support.\n          value = object[property];\n        } catch (exception) {}\n        if (typeof value == \"object\" && value) {\n          className = getClass.call(value);\n          if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              if (getDay) {\n                // Manually compute the year, month, date, hours, minutes,\n                // seconds, and milliseconds if the `getUTC*` methods are\n                // buggy. Adapted from @Yaffle's `date-shim` project.\n                date = floor(value / 864e5);\n                for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                date = 1 + date - getDay(year, month);\n                // The `time` value specifies the time within the day (see ES\n                // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                // to compute `A modulo B`, as the `%` operator does not\n                // correspond to the `modulo` operation for negative numbers.\n                time = (value % 864e5 + 864e5) % 864e5;\n                // The hours, minutes, seconds, and milliseconds are obtained by\n                // decomposing the time within the day. See section 15.9.1.10.\n                hours = floor(time / 36e5) % 24;\n                minutes = floor(time / 6e4) % 60;\n                seconds = floor(time / 1e3) % 60;\n                milliseconds = time % 1e3;\n              } else {\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth();\n                date = value.getUTCDate();\n                hours = value.getUTCHours();\n                minutes = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                milliseconds = value.getUTCMilliseconds();\n              }\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n            } else {\n              value = null;\n            }\n          } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n            // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n            // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n            // ignores all `toJSON` methods on these objects unless they are\n            // defined directly on an instance.\n            value = value.toJSON(property);\n          }\n        }\n        if (callback) {\n          // If a replacement function was provided, call it to obtain the value\n          // for serialization.\n          value = callback.call(object, property, value);\n        }\n        if (value === null) {\n          return \"null\";\n        }\n        className = getClass.call(value);\n        if (className == booleanClass) {\n          // Booleans are represented literally.\n          return \"\" + value;\n        } else if (className == numberClass) {\n          // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n          // `\"null\"`.\n          return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n        } else if (className == stringClass) {\n          // Strings are double-quoted and escaped.\n          return quote(\"\" + value);\n        }\n        // Recursively serialize objects and arrays.\n        if (typeof value == \"object\") {\n          // Check for cyclic structures. This is a linear search; performance\n          // is inversely proportional to the number of unique nested objects.\n          for (length = stack.length; length--;) {\n            if (stack[length] === value) {\n              // Cyclic structures cannot be serialized by `JSON.stringify`.\n              throw TypeError();\n            }\n          }\n          // Add the object to the stack of traversed objects.\n          stack.push(value);\n          results = [];\n          // Save the current indentation level and indent one additional level.\n          prefix = indentation;\n          indentation += whitespace;\n          if (className == arrayClass) {\n            // Recursively serialize array elements.\n            for (index = 0, length = value.length; index < length; index++) {\n              element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n              results.push(element === undef ? \"null\" : element);\n            }\n            result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n          } else {\n            // Recursively serialize object members. Members are selected from\n            // either a user-specified list of property names, or the object\n            // itself.\n            forEach(properties || value, function (property) {\n              var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n              if (element !== undef) {\n                // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                // is not the empty string, let `member` {quote(property) + \":\"}\n                // be the concatenation of `member` and the `space` character.\"\n                // The \"`space` character\" refers to the literal space\n                // character, not the `space` {width} argument provided to\n                // `JSON.stringify`.\n                results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n              }\n            });\n            result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n          }\n          // Remove the object from the traversed object stack.\n          stack.pop();\n          return result;\n        }\n      };\n\n      // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n      JSON3.stringify = function (source, filter, width) {\n        var whitespace, callback, properties, className;\n        if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n          if ((className = getClass.call(filter)) == functionClass) {\n            callback = filter;\n          } else if (className == arrayClass) {\n            // Convert the property names array into a makeshift set.\n            properties = {};\n            for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n          }\n        }\n        if (width) {\n          if ((className = getClass.call(width)) == numberClass) {\n            // Convert the `width` to an integer and create a string containing\n            // `width` number of space characters.\n            if ((width -= width % 1) > 0) {\n              for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n            }\n          } else if (className == stringClass) {\n            whitespace = width.length <= 10 ? width : width.slice(0, 10);\n          }\n        }\n        // Opera <= 7.54u2 discards the values associated with empty string keys\n        // (`\"\"`) only if they are used directly within an object member list\n        // (e.g., `!(\"\" in { \"\": 1})`).\n        return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n      };\n    }\n\n    // Public: Parses a JSON source string.\n    if (!has(\"json-parse\")) {\n      var fromCharCode = String.fromCharCode;\n\n      // Internal: A map of escaped control characters and their unescaped\n      // equivalents.\n      var Unescapes = {\n        92: \"\\\\\",\n        34: '\"',\n        47: \"/\",\n        98: \"\\b\",\n        116: \"\\t\",\n        110: \"\\n\",\n        102: \"\\f\",\n        114: \"\\r\"\n      };\n\n      // Internal: Stores the parser state.\n      var Index, Source;\n\n      // Internal: Resets the parser state and throws a `SyntaxError`.\n      var abort = function() {\n        Index = Source = null;\n        throw SyntaxError();\n      };\n\n      // Internal: Returns the next token, or `\"$\"` if the parser has reached\n      // the end of the source string. A token may be a string, number, `null`\n      // literal, or Boolean literal.\n      var lex = function () {\n        var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n        while (Index < length) {\n          charCode = source.charCodeAt(Index);\n          switch (charCode) {\n            case 9: case 10: case 13: case 32:\n              // Skip whitespace tokens, including tabs, carriage returns, line\n              // feeds, and space characters.\n              Index++;\n              break;\n            case 123: case 125: case 91: case 93: case 58: case 44:\n              // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n              // the current position.\n              value = charIndexBuggy ? source.charAt(Index) : source[Index];\n              Index++;\n              return value;\n            case 34:\n              // `\"` delimits a JSON string; advance to the next character and\n              // begin parsing the string. String tokens are prefixed with the\n              // sentinel `@` character to distinguish them from punctuators and\n              // end-of-string tokens.\n              for (value = \"@\", Index++; Index < length;) {\n                charCode = source.charCodeAt(Index);\n                if (charCode < 32) {\n                  // Unescaped ASCII control characters (those with a code unit\n                  // less than the space character) are not permitted.\n                  abort();\n                } else if (charCode == 92) {\n                  // A reverse solidus (`\\`) marks the beginning of an escaped\n                  // control character (including `\"`, `\\`, and `/`) or Unicode\n                  // escape sequence.\n                  charCode = source.charCodeAt(++Index);\n                  switch (charCode) {\n                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                      // Revive escaped control characters.\n                      value += Unescapes[charCode];\n                      Index++;\n                      break;\n                    case 117:\n                      // `\\u` marks the beginning of a Unicode escape sequence.\n                      // Advance to the first character and validate the\n                      // four-digit code point.\n                      begin = ++Index;\n                      for (position = Index + 4; Index < position; Index++) {\n                        charCode = source.charCodeAt(Index);\n                        // A valid sequence comprises four hexdigits (case-\n                        // insensitive) that form a single hexadecimal value.\n                        if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                          // Invalid Unicode escape sequence.\n                          abort();\n                        }\n                      }\n                      // Revive the escaped character.\n                      value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                      break;\n                    default:\n                      // Invalid escape sequence.\n                      abort();\n                  }\n                } else {\n                  if (charCode == 34) {\n                    // An unescaped double-quote character marks the end of the\n                    // string.\n                    break;\n                  }\n                  charCode = source.charCodeAt(Index);\n                  begin = Index;\n                  // Optimize for the common case where a string is valid.\n                  while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                    charCode = source.charCodeAt(++Index);\n                  }\n                  // Append the string as-is.\n                  value += source.slice(begin, Index);\n                }\n              }\n              if (source.charCodeAt(Index) == 34) {\n                // Advance to the next character and return the revived string.\n                Index++;\n                return value;\n              }\n              // Unterminated string.\n              abort();\n            default:\n              // Parse numbers and literals.\n              begin = Index;\n              // Advance past the negative sign, if one is specified.\n              if (charCode == 45) {\n                isSigned = true;\n                charCode = source.charCodeAt(++Index);\n              }\n              // Parse an integer or floating-point value.\n              if (charCode >= 48 && charCode <= 57) {\n                // Leading zeroes are interpreted as octal literals.\n                if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                  // Illegal octal literal.\n                  abort();\n                }\n                isSigned = false;\n                // Parse the integer component.\n                for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                // Floats cannot contain a leading decimal point; however, this\n                // case is already accounted for by the parser.\n                if (source.charCodeAt(Index) == 46) {\n                  position = ++Index;\n                  // Parse the decimal component.\n                  for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal trailing decimal.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Parse exponents. The `e` denoting the exponent is\n                // case-insensitive.\n                charCode = source.charCodeAt(Index);\n                if (charCode == 101 || charCode == 69) {\n                  charCode = source.charCodeAt(++Index);\n                  // Skip past the sign following the exponent, if one is\n                  // specified.\n                  if (charCode == 43 || charCode == 45) {\n                    Index++;\n                  }\n                  // Parse the exponential component.\n                  for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal empty exponent.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Coerce the parsed value to a JavaScript number.\n                return +source.slice(begin, Index);\n              }\n              // A negative sign may only precede numbers.\n              if (isSigned) {\n                abort();\n              }\n              // `true`, `false`, and `null` literals.\n              if (source.slice(Index, Index + 4) == \"true\") {\n                Index += 4;\n                return true;\n              } else if (source.slice(Index, Index + 5) == \"false\") {\n                Index += 5;\n                return false;\n              } else if (source.slice(Index, Index + 4) == \"null\") {\n                Index += 4;\n                return null;\n              }\n              // Unrecognized token.\n              abort();\n          }\n        }\n        // Return the sentinel `$` character if the parser has reached the end\n        // of the source string.\n        return \"$\";\n      };\n\n      // Internal: Parses a JSON `value` token.\n      var get = function (value) {\n        var results, hasMembers;\n        if (value == \"$\") {\n          // Unexpected end of input.\n          abort();\n        }\n        if (typeof value == \"string\") {\n          if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n            // Remove the sentinel `@` character.\n            return value.slice(1);\n          }\n          // Parse object and array literals.\n          if (value == \"[\") {\n            // Parses a JSON array, returning a new JavaScript array.\n            results = [];\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing square bracket marks the end of the array literal.\n              if (value == \"]\") {\n                break;\n              }\n              // If the array literal contains elements, the current token\n              // should be a comma separating the previous element from the\n              // next.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"]\") {\n                    // Unexpected trailing `,` in array literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each array element.\n                  abort();\n                }\n              }\n              // Elisions and leading commas are not permitted.\n              if (value == \",\") {\n                abort();\n              }\n              results.push(get(value));\n            }\n            return results;\n          } else if (value == \"{\") {\n            // Parses a JSON object, returning a new JavaScript object.\n            results = {};\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing curly brace marks the end of the object literal.\n              if (value == \"}\") {\n                break;\n              }\n              // If the object literal contains members, the current token\n              // should be a comma separator.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"}\") {\n                    // Unexpected trailing `,` in object literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each object member.\n                  abort();\n                }\n              }\n              // Leading commas are not permitted, object property names must be\n              // double-quoted strings, and a `:` must separate each property\n              // name and value.\n              if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                abort();\n              }\n              results[value.slice(1)] = get(lex());\n            }\n            return results;\n          }\n          // Unexpected token encountered.\n          abort();\n        }\n        return value;\n      };\n\n      // Internal: Updates a traversed object member.\n      var update = function(source, property, callback) {\n        var element = walk(source, property, callback);\n        if (element === undef) {\n          delete source[property];\n        } else {\n          source[property] = element;\n        }\n      };\n\n      // Internal: Recursively traverses a parsed JSON object, invoking the\n      // `callback` function for each value. This is an implementation of the\n      // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n      var walk = function (source, property, callback) {\n        var value = source[property], length;\n        if (typeof value == \"object\" && value) {\n          // `forEach` can't be used to traverse an array in Opera <= 8.54\n          // because its `Object#hasOwnProperty` implementation returns `false`\n          // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n          if (getClass.call(value) == arrayClass) {\n            for (length = value.length; length--;) {\n              update(value, length, callback);\n            }\n          } else {\n            forEach(value, function (property) {\n              update(value, property, callback);\n            });\n          }\n        }\n        return callback.call(source, property, value);\n      };\n\n      // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n      JSON3.parse = function (source, callback) {\n        var result, value;\n        Index = 0;\n        Source = \"\" + source;\n        result = get(lex());\n        // If a JSON string contains multiple tokens, it is invalid.\n        if (lex() != \"$\") {\n          abort();\n        }\n        // Reset the parser state.\n        Index = Source = null;\n        return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n      };\n    }\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return JSON3;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}(this));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js\n ** module id = 60\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js?");

/***/ },
/* 61 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 61\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/buildin/amd-options.js?");

/***/ },
/* 62 */
/***/ function(module, exports) {

	eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/~/isarray/index.js\n ** module id = 62\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/~/isarray/index.js?");

/***/ },
/* 63 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/component-emitter/index.js\n ** module id = 63\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/component-emitter/index.js?");

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = __webpack_require__(62);\nvar isBuf = __webpack_require__(65);\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/binary.js\n ** module id = 64\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/binary.js?");

/***/ },
/* 65 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/is-buffer.js\n ** module id = 65\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/socket.io-parser/is-buffer.js?");

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar url = __webpack_require__(56);\nvar eio = __webpack_require__(67);\nvar Socket = __webpack_require__(98);\nvar Emitter = __webpack_require__(63);\nvar parser = __webpack_require__(59);\nvar on = __webpack_require__(100);\nvar bind = __webpack_require__(101);\nvar object = __webpack_require__(102);\nvar debug = __webpack_require__(58)('socket.io-client:manager');\nvar indexOf = __webpack_require__(95);\nvar Backoff = __webpack_require__(103);\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = [];\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].id = this.engine.id;\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n      if (!~indexOf(self.connected, socket)) {\n        self.connected.push(socket);\n      }\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connected, socket);\n  if (~index) this.connected.splice(index, 1);\n  if (this.connected.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  this.skipReconnect = true;\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.engine && this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('close');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/lib/manager.js\n ** module id = 66\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/lib/manager.js?");

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nmodule.exports =  __webpack_require__(68);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/index.js\n ** module id = 67\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/index.js?");

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nmodule.exports = __webpack_require__(69);\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = __webpack_require__(77);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/index.js\n ** module id = 68\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/index.js?");

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar transports = __webpack_require__(70);\nvar Emitter = __webpack_require__(63);\nvar debug = __webpack_require__(89)('engine.io-client:socket');\nvar index = __webpack_require__(95);\nvar parser = __webpack_require__(77);\nvar parseuri = __webpack_require__(96);\nvar parsejson = __webpack_require__(97);\nvar parseqs = __webpack_require__(87);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.host = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.host) {\n    var pieces = opts.host.split(':');\n    opts.hostname = pieces.shift();\n    if (pieces.length) {\n      opts.port = pieces.pop();\n    } else if (!opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? '443' : '80';\n    }\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.callbackBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized || null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = __webpack_require__(76);\nSocket.transports = __webpack_require__(70);\nSocket.parser = __webpack_require__(77);\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 == this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  var transport;\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.emit('error', err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api public\n*/\n\nSocket.prototype.ping = function () {\n  this.sendPacket('ping');\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  for (var i = 0; i < this.prevBufferLen; i++) {\n    if (this.callbackBuffer[i]) {\n      this.callbackBuffer[i]();\n    }\n  }\n\n  this.writeBuffer.splice(0, this.prevBufferLen);\n  this.callbackBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (this.writeBuffer.length == 0) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, fn) {\n  this.sendPacket('message', msg, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, fn) {\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  var packet = { type: type, data: data };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  this.callbackBuffer.push(fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    function close() {\n      self.onClose('forced close');\n      debug('socket closing - telling transport to close');\n      self.transport.close();\n    }\n\n    function cleanupAndClose() {\n      self.removeListener('upgrade', cleanupAndClose);\n      self.removeListener('upgradeError', cleanupAndClose);\n      close();\n    }\n\n    function waitForUpgrade() {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      self.once('upgrade', cleanupAndClose);\n      self.once('upgradeError', cleanupAndClose);\n    }\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // clean buffers in next tick, so developers can still\n    // grab the buffers on `close` event\n    setTimeout(function() {\n      self.writeBuffer = [];\n      self.callbackBuffer = [];\n      self.prevBufferLen = 0;\n    }, 0);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/socket.js\n ** module id = 69\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/socket.js?");

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = __webpack_require__(71);\nvar XHR = __webpack_require__(74);\nvar JSONP = __webpack_require__(92);\nvar websocket = __webpack_require__(93);\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/index.js\n ** module id = 70\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/index.js?");

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	eval("// browser shim for xmlhttprequest module\nvar hasCORS = __webpack_require__(72);\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js\n ** module id = 71\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js?");

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar global = __webpack_require__(73);\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = 'XMLHttpRequest' in global &&\n    'withCredentials' in new global.XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/has-cors/index.js\n ** module id = 72\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/has-cors/index.js?");

/***/ },
/* 73 */
/***/ function(module, exports) {

	eval("\n/**\n * Returns `this`. Execute this without a \"context\" (i.e. without it being\n * attached to an object of the left-hand side), and `this` points to the\n * \"global\" scope of the current JS execution.\n */\n\nmodule.exports = (function () { return this; })();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/has-cors/~/global/index.js\n ** module id = 73\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/has-cors/~/global/index.js?");

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = __webpack_require__(71);\nvar Polling = __webpack_require__(75);\nvar Emitter = __webpack_require__(63);\nvar inherit = __webpack_require__(88);\nvar debug = __webpack_require__(89)('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        data = 'ok';\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js\n ** module id = 74\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js?");

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(76);\nvar parseqs = __webpack_require__(87);\nvar parser = __webpack_require__(77);\nvar inherit = __webpack_require__(88);\nvar debug = __webpack_require__(89)('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = __webpack_require__(71);\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = +new Date + '-' + Transport.timestamps++;\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling.js\n ** module id = 75\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling.js?");

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(77);\nvar Emitter = __webpack_require__(63);\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * A counter used to prevent collisions in the timestamps used\n * for cache busting.\n */\n\nTransport.timestamps = 0;\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transport.js\n ** module id = 76\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transport.js?");

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Module dependencies.\n */\n\nvar keys = __webpack_require__(78);\nvar hasBinary = __webpack_require__(79);\nvar sliceBuffer = __webpack_require__(81);\nvar base64encoder = __webpack_require__(82);\nvar after = __webpack_require__(83);\nvar utf8 = __webpack_require__(84);\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = __webpack_require__(86);\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js\n ** module id = 77\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js?");

/***/ },
/* 78 */
/***/ function(module, exports) {

	eval("\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js\n ** module id = 78\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js?");

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/*\n * Module requirements.\n */\n\nvar isArray = __webpack_require__(80);\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/has-binary/index.js\n ** module id = 79\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/has-binary/index.js?");

/***/ },
/* 80 */
/***/ function(module, exports) {

	eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/has-binary/~/isarray/index.js\n ** module id = 80\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/has-binary/~/isarray/index.js?");

/***/ },
/* 81 */
/***/ function(module, exports) {

	eval("/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js\n ** module id = 81\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js?");

/***/ },
/* 82 */
/***/ function(module, exports) {

	eval("/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js\n ** module id = 82\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js?");

/***/ },
/* 83 */
/***/ function(module, exports) {

	eval("module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js\n ** module id = 83\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js?");

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn utf8;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(85)(module), (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js\n ** module id = 84\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js?");

/***/ },
/* 85 */
/***/ function(module, exports) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 85\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 86 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js\n ** module id = 86\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js?");

/***/ },
/* 87 */
/***/ function(module, exports) {

	eval("/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parseqs/index.js\n ** module id = 87\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parseqs/index.js?");

/***/ },
/* 88 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/component-inherit/index.js\n ** module id = 88\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/component-inherit/index.js?");

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(90);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // This hackery is required for IE8,\n  // where the `console.log` function doesn't have 'apply'\n  return 'object' == typeof console\n    && 'function' == typeof console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      localStorage.removeItem('debug');\n    } else {\n      localStorage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = localStorage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/browser.js\n ** module id = 89\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/browser.js?");

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(91);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/debug.js\n ** module id = 90\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/debug.js?");

/***/ },
/* 91 */
/***/ function(module, exports) {

	eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/~/ms/index.js\n ** module id = 91\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/debug/~/ms/index.js?");

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module requirements.\n */\n\nvar Polling = __webpack_require__(75);\nvar inherit = __webpack_require__(88);\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  insertAt.parentNode.insertBefore(script, insertAt);\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js\n ** module id = 92\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js?");

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Module dependencies.\n */\n\nvar Transport = __webpack_require__(76);\nvar parser = __webpack_require__(77);\nvar parseqs = __webpack_require__(87);\nvar inherit = __webpack_require__(88);\nvar debug = __webpack_require__(89)('engine.io-client:websocket');\n\n/**\n * `ws` exposes a WebSocket-compatible interface in\n * Node, or the `WebSocket` or `MozWebSocket` globals\n * in the browser.\n */\n\nvar WebSocket = __webpack_require__(94);\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = { agent: this.agent };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  this.ws = new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  this.ws.binaryType = 'arraybuffer';\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  for (var i = 0, l = packets.length; i < l; i++) {\n    parser.encodePacket(packets[i], this.supportsBinary, function(data) {\n      //Sometimes the websocket has already been closed but the browser didn't\n      //have a chance of informing us about it yet, in that case send will\n      //throw an error\n      try {\n        self.ws.send(data);\n      } catch (e){\n        debug('websocket closed before onclose event');\n      }\n    });\n  }\n\n  function ondrain() {\n    self.writable = true;\n    self.emit('drain');\n  }\n  // fake drain\n  // defer to next tick to allow Socket to clear writeBuffer\n  setTimeout(ondrain, 0);\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = +new Date;\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  return schema + '://' + this.hostname + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/websocket.js\n ** module id = 93\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/lib/transports/websocket.js?");

/***/ },
/* 94 */
/***/ function(module, exports) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/ws/lib/browser.js\n ** module id = 94\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/ws/lib/browser.js?");

/***/ },
/* 95 */
/***/ function(module, exports) {

	eval("\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/indexof/index.js\n ** module id = 95\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/indexof/index.js?");

/***/ },
/* 96 */
/***/ function(module, exports) {

	eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parseuri/index.js\n ** module id = 96\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parseuri/index.js?");

/***/ },
/* 97 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parsejson/index.js\n ** module id = 97\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/engine.io-client/~/parsejson/index.js?");

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	eval("\n/**\n * Module dependencies.\n */\n\nvar parser = __webpack_require__(59);\nvar Emitter = __webpack_require__(63);\nvar toArray = __webpack_require__(99);\nvar on = __webpack_require__(100);\nvar bind = __webpack_require__(101);\nvar debug = __webpack_require__(58)('socket.io-client:socket');\nvar hasBin = __webpack_require__(79);\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  if (this.io.autoConnect) this.open();\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  debug('calling ack %s with %j', packet.id, packet.data);\n  var fn = this.acks[packet.id];\n  fn.apply(this, packet.data);\n  delete this.acks[packet.id];\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/lib/socket.js\n ** module id = 98\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/lib/socket.js?");

/***/ },
/* 99 */
/***/ function(module, exports) {

	eval("module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/to-array/index.js\n ** module id = 99\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/to-array/index.js?");

/***/ },
/* 100 */
/***/ function(module, exports) {

	eval("\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/lib/on.js\n ** module id = 100\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/lib/on.js?");

/***/ },
/* 101 */
/***/ function(module, exports) {

	eval("/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/component-bind/index.js\n ** module id = 101\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/component-bind/index.js?");

/***/ },
/* 102 */
/***/ function(module, exports) {

	eval("\n/**\n * HOP ref.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return own keys in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.keys = Object.keys || function(obj){\n  var keys = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n/**\n * Return own values in `obj`.\n *\n * @param {Object} obj\n * @return {Array}\n * @api public\n */\n\nexports.values = function(obj){\n  var vals = [];\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      vals.push(obj[key]);\n    }\n  }\n  return vals;\n};\n\n/**\n * Merge `b` into `a`.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api public\n */\n\nexports.merge = function(a, b){\n  for (var key in b) {\n    if (has.call(b, key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/**\n * Return length of `obj`.\n *\n * @param {Object} obj\n * @return {Number}\n * @api public\n */\n\nexports.length = function(obj){\n  return exports.keys(obj).length;\n};\n\n/**\n * Check if `obj` is empty.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api public\n */\n\nexports.isEmpty = function(obj){\n  return 0 == exports.length(obj);\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/object-component/index.js\n ** module id = 102\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/object-component/index.js?");

/***/ },
/* 103 */
/***/ function(module, exports) {

	eval("\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/simplewebrtc/~/socket.io-client/~/backo2/index.js\n ** module id = 103\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/simplewebrtc/~/socket.io-client/~/backo2/index.js?");

/***/ }
/******/ ]);